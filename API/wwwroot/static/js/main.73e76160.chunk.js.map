{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/models/activity.ts","app/models/profile.ts","app/stores/context/activity.ts","app/stores/context/profile.ts","app/stores/context/user.ts","app/stores/index.tsx","app/stores/context/common.ts","app/stores/context/comment.ts","app/layout/ScrollToTop.tsx","reportWebVitals.ts","app/stores/useStore.ts","app/layout/PrivateRoute.tsx","app/util/hooks.ts","features/users/RegisterSuccess/index.tsx","app/components/Loading/index.tsx","features/activities/ActivityListItemPlaceholder/index.tsx","features/profiles/ProfileHeader/FollowButton/index.tsx","features/profiles/ProfileCard/index.tsx","features/activities/ActivityList/ActivityItem/AttendeesList/index.tsx","app/components/Button/styles.ts","app/components/Button/index.tsx","features/activities/ActivityList/ActivityItem/styles.ts","features/activities/ActivityList/ActivityItem/index.tsx","features/activities/ActivityList/styles.ts","features/activities/ActivityList/index.tsx","features/activities/ActivityFilters/styles.ts","features/activities/ActivityFilters/index.tsx","features/activities/styles.ts","features/activities/index.tsx","app/components/Input/styles.ts","app/components/Input/index.tsx","app/components/Textarea/styles.ts","app/components/Textarea/index.tsx","app/components/SelectInput/styles.ts","app/components/SelectInput/index.tsx","app/components/SelectInput/Options/category.ts","app/components/DateInput/styles.ts","app/components/DateInput/index.tsx","features/activities/ActivityForm/styles.ts","features/activities/ActivityForm/index.tsx","features/activities/ActivityDetails/Chat/styles.ts","features/activities/ActivityDetails/Chat/index.tsx","features/activities/ActivityDetails/Header/styles.ts","features/activities/ActivityDetails/Header/index.tsx","features/activities/ActivityDetails/Information/styles.ts","features/activities/ActivityDetails/Information/index.tsx","features/activities/ActivityDetails/SideBar/styles.ts","features/activities/ActivityDetails/SideBar/index.tsx","features/activities/ActivityDetails/styles.ts","features/activities/ActivityDetails/index.tsx","features/Home/styles.ts","features/Home/index.tsx","features/errors/ValidationErrors/index.tsx","features/errors/TestError.tsx","features/errors/NotFound/styles.ts","features/errors/NotFound/index.tsx","features/errors/ServerError/index.tsx","features/users/LoginForm/styles.ts","features/users/LoginForm/index.tsx","features/users/RegisterForm/styles.ts","features/users/RegisterForm/index.tsx","features/profiles/ProfileHeader/styles.ts","features/profiles/ProfileHeader/index.tsx","features/profiles/ProfileEditForm/index.tsx","features/profiles/ProfileAbout/index.tsx","features/profiles/ProfileActivities/index.tsx","features/profiles/ProfileFollowings/index.tsx","app/components/PhotoUploadWidget/PhotoWidgetCropper/index.tsx","app/components/PhotoUploadWidget/PhotoWidgetDropzone/index.tsx","app/components/PhotoUploadWidget/index.tsx","features/profiles/ProfilePhotos/index.tsx","features/profiles/ProfileContent/styles.ts","features/profiles/ProfileContent/index.tsx","features/profiles/styles.ts","features/profiles/index.tsx","app/styles/NavBar.ts","app/layout/NavBar.tsx","app/styles/App.ts","features/users/ConfirmEmail/index.tsx","app/layout/App.tsx","app/styles/global.ts","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","toast","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","startsWith","userStore","logout","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","id","create","activity","update","attend","Account","current","login","user","register","fbLogin","accessToken","refreshToken","verifyEmail","email","resendEmailConfirmationLink","Profiles","userName","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateProfile","profile","updateFollowing","listFollowings","predicate","listActivities","Activity","init","Object","assign","ActivityFormValues","undefined","title","category","description","date","city","venue","Profile","displayName","image","ActivityStore","activitiesRegister","Map","selectedActivity","submitting","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","loadActivities","axiosParams","result","runInAction","setActivity","setPagination","console","log","getActivity","loadActivity","createActivity","attendee","newActivity","hostUserName","attendees","updateActivity","updatedActivity","deleteActivity","updateAttendance","isGoing","filter","cancelActivityToggle","isCancelled","clearSelectedActivity","updateAttendeeFollowing","following","followersCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","some","isHost","host","find","Date","ProfileStore","loadingProfile","uploading","followings","loadingFollowings","activeTab","userActivities","loadingActivities","setActiveTab","loadProfile","photo","photos","isMain","setImage","p","setDisplayName","activityStore","followingCount","loadFollowings","loadUserActivities","UserStore","fbAccessToken","fbLoading","refreshTokenTimeout","setToken","startRefreshTokenTimer","window","localStorage","removeItem","getUser","name","getFacebookLoginStatus","FB","getLoginStatus","authResponse","facebookLogin","apiLogin","catch","scope","stopRefreshTokenTimer","success","err","jwtToken","atob","split","timeout","exp","now","setTimeout","clearTimeout","getItem","appLoaded","setAppLoaded","setItem","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","StoreProvider","children","Provider","ScrollToTop","pathname","useLocation","useEffect","scrollTo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","useStore","useContext","PrivateRoute","Component","component","rest","isLoggedIn","render","props","to","useQuery","search","RegisterSuccess","Segment","placeholder","textAlign","icon","color","Icon","Button","primary","onClick","content","size","Loading","inverted","Dimmer","active","Loader","ActivityListItemPlaceholder","Placeholder","fluid","style","marginTop","Group","minHeight","Header","Line","Paragraph","secondary","clearing","disabled","floated","observer","Reveal","animated","Content","visible","width","hidden","basic","e","preventDefault","handleFollow","Card","as","Link","Image","src","alt","Description","str","length","slice","truncate","bio","extra","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","Item","circular","bordered","colors","master","positive","negative","none","default","Container","styled","button","situation","type","height","div","useState","target","setTarget","Label","attached","className","event","currentTarget","groupedActivities","group","Filter","activated","shade","has","onChange","loadingNext","setLoadingNext","gridArea","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Input","useField","field","meta","touched","htmlFor","label","Textarea","SelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","text","DateInput","selected","validationSchema","Yup","required","nullable","useHistory","useParams","enableReinitialize","initialValues","onSubmit","uuid","handleSubmit","isValid","isSubmitting","dirty","autoComplete","cols","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","schema","resetForm","position","onKeyPress","shiftKey","form","setFieldValue","formatDistanceToNow","zIndex","left","top","ribbon","ValidationErrors","Message","i","TestErrors","setErrors","widths","baseUrl","NotFound","sub","message","password","marginBottom","formValidation","Grid","Column","avatar","Statistic","Divider","handleToggleEditMode","isCurrentUser","editMode","setEditMode","useCallback","Tab","Pane","whiteSpace","panes","menuItem","pane","menu","pointing","onTabChange","activeIndex","handleTabChange","itemsPerRow","objectFit","Meta","PhotoWidgetCropper","imagePreview","handleSetCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","PhotoWidgetDropzone","handleSetFiles","dzStyles","border","borderRadius","paddingTop","onDrop","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","handlePhotoUpload","files","setFiles","cropper","setCropper","revokeObjectURL","onCrop","getCroppedCanvas","toBlob","blob","overflow","addPhotoMode","setAddPhotoMode","handleToggleAddPhotoMode","handleSetMainPhoto","handleDeletePhoto","vertical","menuPosition","location","spaced","Dropdown","Menu","Background","ConfirmEmail","Status","setStatus","Inline","getBody","finally","path","Home","exact","ActivityDashboard","ActivityDetails","ActivityForm","ServerError","LoginForm","RegisterForm","hideProgressBar","createGlobalStyle","createBrowserHistory","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.73e76160.chunk.js","sourcesContent":["export interface Pagination {\r\n  currentPage: number;\r\n  itemsPerPage: number;\r\n  totalItems: number;\r\n  totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n  data: T;\r\n  pagination: Pagination;\r\n\r\n  constructor(data: T, pagination: Pagination) {\r\n    this.data = data;\r\n    this.pagination = pagination;\r\n  }\r\n}\r\n\r\nexport class PagingParams {\r\n  pageNumber;\r\n  pageSize;\r\n\r\n  constructor(pageNumber = 1, pageSize = 2) {\r\n    this.pageNumber = pageNumber;\r\n    this.pageSize = pageSize;\r\n  }\r\n}\r\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport { store } from \"../stores\";\r\nimport { history } from \"../..\";\r\nimport { PaginatedResult } from \"../models/pagination\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\r\n\r\nconst sleep = (delay: number) => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n};\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use((config) => {\r\n  const token = store.commonStore.token;\r\n\r\n  if (token) config.headers!.Authorization = `Bearer ${token}`;\r\n\r\n  return config;\r\n});\r\n\r\naxios.interceptors.response.use(\r\n  async (response) => {\r\n    if (process.env.NODE_ENV === \"development\") await sleep(1000);\r\n    const pagination = response.headers[\"pagination\"];\r\n    if (pagination) {\r\n      response.data = new PaginatedResult(\r\n        response.data,\r\n        JSON.parse(pagination)\r\n      );\r\n      return response as AxiosResponse<PaginatedResult<any>>;\r\n    }\r\n    return response;\r\n  },\r\n  (error: AxiosError) => {\r\n    const { data, status, config, headers } = error.response!;\r\n\r\n    switch (status) {\r\n      case 400:\r\n        if (typeof data === \"string\") {\r\n          toast.error(data);\r\n        } else if (\r\n          config.method === \"get\" &&\r\n          data.errors.hasOwnProperty(\"id\")\r\n        ) {\r\n          history.push(\"/not-found\");\r\n        } else if (data.errors) {\r\n          const modalStateErrors = [];\r\n\r\n          for (const key in data.errors) {\r\n            if (data.errors[key]) {\r\n              modalStateErrors.push(data.errors[key]);\r\n            }\r\n          }\r\n\r\n          throw modalStateErrors.flat();\r\n        }\r\n        break;\r\n      case 401:\r\n        if (\r\n          headers[\"www-authenticate\"]?.startsWith('Bearer error=\"invalid_token')\r\n        ) {\r\n          store.userStore.logout();\r\n          toast.error(\"Session expired - please login again\");\r\n        }\r\n        break;\r\n      case 404:\r\n        history.push(\"/not-found\");\r\n        break;\r\n      case 500:\r\n        store.commonStore.setServerError(data);\r\n        history.push(\"/server-error\");\r\n        break;\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n  post: <T>(url: string, body: {}) =>\r\n    axios.post<T>(url, body).then(responseBody),\r\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n  del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n};\r\n\r\nconst Activities = {\r\n  list: (params: URLSearchParams) =>\r\n    axios\r\n      .get<PaginatedResult<Activity[]>>(\"/activities\", { params })\r\n      .then(responseBody),\r\n  details: (id: string) => requests.get<Activity>(`/activities/${id}`),\r\n  create: (activity: ActivityFormValues) =>\r\n    requests.post<void>(\"/activities\", activity),\r\n  update: (activity: ActivityFormValues) =>\r\n    requests.put<void>(`/activities/${activity.id}`, activity),\r\n  delete: (id: string) => requests.del<void>(`/activities/${id}`),\r\n  attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {}),\r\n};\r\n\r\nconst Account = {\r\n  current: () => requests.get<User>(\"/account\"),\r\n  login: (user: UserFormValues) => requests.post<User>(\"/account/login\", user),\r\n  register: (user: UserFormValues) =>\r\n    requests.post<User>(\"/account/register\", user),\r\n  fbLogin: (accessToken: string) =>\r\n    requests.post<User>(`/account/fbLogin?accessToken=${accessToken}`, {}),\r\n  refreshToken: () => requests.post<User>(`/account/refreshToken`, {}),\r\n  verifyEmail: (token: string, email: string) =>\r\n    requests.post<void>(\r\n      `/account/verifyEmail?token=${token}&email=${email}`,\r\n      {}\r\n    ),\r\n  resendEmailConfirmationLink: (email: string) =>\r\n    requests.get(`/account/resendEmailConfirmationLink?email=${email}`),\r\n};\r\n\r\nconst Profiles = {\r\n  get: (userName: string) => requests.get<Profile>(`/profiles/${userName}`),\r\n  uploadPhoto: (file: Blob) => {\r\n    let formData = new FormData();\r\n    formData.append(\"File\", file);\r\n\r\n    return axios.post<Photo>(\"/photos\", formData, {\r\n      headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    });\r\n  },\r\n  setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\r\n  deletePhoto: (id: string) => requests.del(`/photos/${id}`),\r\n  updateProfile: (profile: Partial<Profile>) =>\r\n    requests.put(`/profiles`, profile),\r\n  updateFollowing: (userName: string) =>\r\n    requests.post(`/follow/${userName}`, {}),\r\n  listFollowings: (userName: string, predicate: string) =>\r\n    requests.get<Profile[]>(`/follow/${userName}?predicate=${predicate}`),\r\n  listActivities: (userName: string, predicate: string) =>\r\n    requests.get<UserActivity[]>(\r\n      `/profiles/${userName}/activities?predicate=${predicate}`\r\n    ),\r\n};\r\n\r\nconst agent = {\r\n  Activities,\r\n  Account,\r\n  Profiles,\r\n};\r\n\r\nexport default agent;\r\n","import { Profile } from \"./profile\";\r\n\r\nexport interface Activity {\r\n  id: string;\r\n  title: string;\r\n  date: Date | null;\r\n  description: string;\r\n  category: string;\r\n  city: string;\r\n  venue: string;\r\n  hostUserName?: string;\r\n  isCancelled?: boolean;\r\n  isGoing: boolean;\r\n  isHost: boolean;\r\n  host?: Profile;\r\n  attendees: Profile[];\r\n}\r\n\r\nexport class Activity implements Activity {\r\n  constructor(init?: ActivityFormValues) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n\r\nexport class ActivityFormValues {\r\n  id?: string = undefined;\r\n  title: string = \"\";\r\n  category: string = \"\";\r\n  description: string = \"\";\r\n  date: Date | null = null;\r\n  city: string = \"\";\r\n  venue: string = \"\";\r\n\r\n  constructor(activity?: ActivityFormValues) {\r\n    if (activity) {\r\n      this.id = activity.id;\r\n      this.title = activity.title;\r\n      this.category = activity.category;\r\n      this.description = activity.description;\r\n      this.date = activity.date;\r\n      this.city = activity.city;\r\n      this.venue = activity.venue;\r\n    }\r\n  }\r\n}\r\n","import { User } from \"./user\";\r\n\r\nexport interface Profile {\r\n  userName: string;\r\n  displayName: string;\r\n  image?: string;\r\n  bio?: string;\r\n  followersCount: number;\r\n  followingCount: number;\r\n  following: boolean;\r\n  photos?: Photo[];\r\n}\r\n\r\nexport class Profile implements Profile {\r\n  constructor(user: User) {\r\n    this.userName = user.userName;\r\n    this.displayName = user.displayName;\r\n    this.image = user.image;\r\n  }\r\n}\r\n\r\nexport interface Photo {\r\n  id: string;\r\n  url: string;\r\n  isMain: boolean;\r\n}\r\n\r\nexport interface UserActivity {\r\n  id: string;\r\n  title: string;\r\n  category: string;\r\n  date: Date;\r\n}\r\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport { format } from \"date-fns\";\r\n\r\nimport agent from \"../../api/agent\";\r\n\r\nimport { Activity, ActivityFormValues } from \"../../models/activity\";\r\nimport { store } from \"..\";\r\nimport { Profile } from \"../../models/profile\";\r\nimport { Pagination, PagingParams } from \"../../models/pagination\";\r\n\r\nexport default class ActivityStore {\r\n  activitiesRegister = new Map<string, Activity>();\r\n  selectedActivity: Activity | undefined = undefined;\r\n  submitting = false;\r\n  loading = false;\r\n  loadingInitial = false;\r\n  pagination: Pagination | null = null;\r\n  pagingParams = new PagingParams();\r\n  predicate = new Map().set(\"all\", true);\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.predicate.keys(),\r\n      () => {\r\n        this.pagingParams = new PagingParams();\r\n        this.activitiesRegister.clear();\r\n        this.loadActivities();\r\n      }\r\n    );\r\n  }\r\n\r\n  setPagingParams = (pagingParams: PagingParams) => {\r\n    this.pagingParams = pagingParams;\r\n  };\r\n\r\n  setPredicate = (predicate: string, value: string | Date) => {\r\n    const resetPredicate = () => {\r\n      this.predicate.forEach((value, key) => {\r\n        if (key !== \"startDate\") this.predicate.delete(key);\r\n      });\r\n    };\r\n\r\n    switch (predicate) {\r\n      case \"all\":\r\n        resetPredicate();\r\n        this.predicate.set(\"all\", true);\r\n        break;\r\n      case \"isGoing\":\r\n        resetPredicate();\r\n        this.predicate.set(\"isGoing\", true);\r\n        break;\r\n      case \"isHost\":\r\n        resetPredicate();\r\n        this.predicate.set(\"isHost\", true);\r\n        break;\r\n      case \"startDate\":\r\n        this.predicate.delete(\"startDate\");\r\n        this.predicate.set(\"startDate\", value);\r\n        break;\r\n    }\r\n  };\r\n\r\n  get axiosParams() {\r\n    const params = new URLSearchParams();\r\n\r\n    params.append(\"pageNumber\", this.pagingParams.pageNumber.toString());\r\n    params.append(\"pageSize\", this.pagingParams.pageSize.toString());\r\n    this.predicate.forEach((value, key) => {\r\n      if (key === \"startDate\") {\r\n        params.append(key, (value as Date).toISOString());\r\n      } else {\r\n        params.append(key, value);\r\n      }\r\n    });\r\n\r\n    return params;\r\n  }\r\n\r\n  get activitiesByDate() {\r\n    return Array.from(this.activitiesRegister.values()).sort(\r\n      (a, b) => a.date!.getTime() - b.date!.getTime()\r\n    );\r\n  }\r\n\r\n  get groupedActivities() {\r\n    return Object.entries(\r\n      this.activitiesByDate.reduce((activities, activity) => {\r\n        const date = format(activity.date!, \"dd MMM yyyy\");\r\n        activities[date] = activities[date]\r\n          ? [...activities[date], activity]\r\n          : [activity];\r\n\r\n        return activities;\r\n      }, {} as { [key: string]: Activity[] })\r\n    );\r\n  }\r\n\r\n  loadActivities = async () => {\r\n    this.loadingInitial = true;\r\n\r\n    try {\r\n      const result = await agent.Activities.list(this.axiosParams);\r\n\r\n      runInAction(() => {\r\n        result.data.forEach((activity) => {\r\n          this.setActivity(activity);\r\n        });\r\n        this.setPagination(result.pagination);\r\n        this.loadingInitial = false;\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n      runInAction(() => {\r\n        this.loadingInitial = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  setPagination = (pagination: Pagination) => {\r\n    this.pagination = pagination;\r\n  };\r\n\r\n  private setActivity(activity: Activity) {\r\n    const user = store.userStore.user;\r\n\r\n    if (user) {\r\n      activity.isGoing = activity.attendees!.some(\r\n        (a) => a.userName === user.userName\r\n      );\r\n      activity.isHost = activity.hostUserName === user.userName;\r\n      activity.host = activity.attendees?.find(\r\n        (a) => a.userName === activity.hostUserName\r\n      );\r\n    }\r\n\r\n    activity.date = new Date(activity.date!);\r\n    this.activitiesRegister.set(activity.id, activity);\r\n  }\r\n\r\n  private getActivity = (id: string) => {\r\n    return this.activitiesRegister.get(id);\r\n  };\r\n\r\n  loadActivity = async (id: string) => {\r\n    let activity = this.getActivity(id);\r\n\r\n    if (activity) {\r\n      this.selectedActivity = activity;\r\n\r\n      return activity;\r\n    } else {\r\n      this.loadingInitial = true;\r\n\r\n      try {\r\n        activity = await agent.Activities.details(id);\r\n\r\n        runInAction(() => {\r\n          this.setActivity(activity!);\r\n          this.selectedActivity = activity;\r\n          this.loadingInitial = false;\r\n        });\r\n\r\n        return activity;\r\n      } catch (err) {\r\n        console.log(err);\r\n        runInAction(() => {\r\n          this.loadingInitial = false;\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  createActivity = async (activity: ActivityFormValues) => {\r\n    const user = store.userStore.user;\r\n    const attendee = new Profile(user!);\r\n    try {\r\n      await agent.Activities.create(activity);\r\n      const newActivity = new Activity(activity);\r\n      newActivity.hostUserName = user!.userName;\r\n      newActivity.attendees = [attendee];\r\n      this.setActivity(newActivity);\r\n\r\n      runInAction(() => {\r\n        this.selectedActivity = newActivity;\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  updateActivity = async (activity: ActivityFormValues) => {\r\n    try {\r\n      await agent.Activities.update(activity);\r\n\r\n      runInAction(() => {\r\n        if (activity.id) {\r\n          let updatedActivity = {\r\n            ...this.getActivity(activity.id),\r\n            ...activity,\r\n          };\r\n          this.activitiesRegister.set(activity.id, updatedActivity as Activity);\r\n          this.selectedActivity = updatedActivity as Activity;\r\n        }\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  deleteActivity = async (id: string) => {\r\n    this.submitting = true;\r\n\r\n    try {\r\n      await agent.Activities.delete(id);\r\n\r\n      runInAction(() => {\r\n        this.activitiesRegister.delete(id);\r\n        this.submitting = false;\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n      runInAction(() => {\r\n        this.submitting = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  updateAttendance = async () => {\r\n    const user = store.userStore.user;\r\n    this.loading = true;\r\n\r\n    try {\r\n      await agent.Activities.attend(this.selectedActivity!.id);\r\n\r\n      runInAction(() => {\r\n        if (this.selectedActivity?.isGoing) {\r\n          this.selectedActivity.attendees =\r\n            this.selectedActivity.attendees?.filter(\r\n              (a) => a.userName !== user!.userName\r\n            );\r\n          this.selectedActivity.isGoing = false;\r\n        } else {\r\n          const attendee = new Profile(user!);\r\n          this.selectedActivity?.attendees?.push(attendee);\r\n          this.selectedActivity!.isGoing = true;\r\n        }\r\n\r\n        this.activitiesRegister.set(\r\n          this.selectedActivity!.id,\r\n          this.selectedActivity!\r\n        );\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  cancelActivityToggle = async () => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.attend(this.selectedActivity!.id);\r\n\r\n      runInAction(() => {\r\n        this.selectedActivity!.isCancelled =\r\n          !this.selectedActivity?.isCancelled;\r\n        this.activitiesRegister.set(\r\n          this.selectedActivity!.id,\r\n          this.selectedActivity!\r\n        );\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  clearSelectedActivity = () => {\r\n    this.selectedActivity = undefined;\r\n  };\r\n\r\n  updateAttendeeFollowing = (userName: string) => {\r\n    this.activitiesRegister.forEach((activity) => {\r\n      activity.attendees.forEach((attendee) => {\r\n        if (attendee.userName === userName) {\r\n          attendee.following\r\n            ? attendee.followersCount--\r\n            : attendee.followersCount++;\r\n          attendee.following = !attendee.following;\r\n        }\r\n      });\r\n    });\r\n  };\r\n}\r\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\n\r\nimport { store } from \"..\";\r\nimport agent from \"../../api/agent\";\r\nimport { Photo, Profile, UserActivity } from \"../../models/profile\";\r\n\r\nexport default class ProfileStore {\r\n  profile: Profile | null = null;\r\n  loadingProfile = false;\r\n  uploading = false;\r\n  loading = false;\r\n  followings: Profile[] = [];\r\n  loadingFollowings: boolean = false;\r\n  activeTab = 0;\r\n  userActivities: UserActivity[] = [];\r\n  loadingActivities = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.activeTab,\r\n      (activeTab) => {\r\n        if (activeTab === 3 || activeTab === 4) {\r\n          const predicate = activeTab === 3 ? \"followers\" : \"following\";\r\n          this.loadFollowings(predicate);\r\n        } else {\r\n          this.followings = [];\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  setActiveTab = (activeTab: any) => (this.activeTab = activeTab);\r\n\r\n  get isCurrentUser() {\r\n    if (store.userStore.user && this.profile) {\r\n      return store.userStore.user.userName === this.profile.userName;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  loadProfile = async (userName: string) => {\r\n    this.loadingProfile = true;\r\n\r\n    try {\r\n      const profile = await agent.Profiles.get(userName);\r\n      runInAction(() => {\r\n        this.profile = profile;\r\n        this.loadingProfile = false;\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n      runInAction(() => (this.loadingProfile = false));\r\n    }\r\n  };\r\n\r\n  uploadPhoto = async (file: Blob) => {\r\n    this.uploading = true;\r\n\r\n    try {\r\n      const response = await agent.Profiles.uploadPhoto(file);\r\n      const photo = response.data;\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos?.push(photo);\r\n          if (photo.isMain && store.userStore.user) {\r\n            store.userStore.setImage(photo.url);\r\n            this.profile.image = photo.url;\r\n          }\r\n        }\r\n        this.uploading = false;\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n      runInAction(() => (this.uploading = false));\r\n    }\r\n  };\r\n\r\n  setMainPhoto = async (photo: Photo) => {\r\n    this.loading = true;\r\n\r\n    try {\r\n      await agent.Profiles.setMainPhoto(photo.id);\r\n      store.userStore.setImage(photo.url);\r\n      runInAction(() => {\r\n        if (this.profile && this.profile.photos) {\r\n          this.profile.photos.find((p) => p.isMain)!.isMain = false;\r\n          this.profile.photos.find((p) => p.id === photo.id)!.isMain = true;\r\n          this.profile.image = photo.url;\r\n        }\r\n        this.loading = false;\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  deletePhoto = async (photo: Photo) => {\r\n    this.loading = true;\r\n\r\n    try {\r\n      await agent.Profiles.deletePhoto(photo.id);\r\n      runInAction(() => {\r\n        if (this.profile && this.profile.photos) {\r\n          this.profile.photos = this.profile.photos.filter(\r\n            (p) => p.id !== photo.id\r\n          );\r\n        }\r\n        this.loading = false;\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  updateProfile = async (profile: Partial<Profile>) => {\r\n    this.loading = true;\r\n\r\n    try {\r\n      await agent.Profiles.updateProfile(profile);\r\n      runInAction(() => {\r\n        if (\r\n          profile.displayName &&\r\n          profile.displayName !== store.userStore.user?.displayName\r\n        ) {\r\n          store.userStore.setDisplayName(profile.displayName);\r\n        }\r\n        this.profile = { ...this.profile, ...(profile as Profile) };\r\n        this.loading = false;\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  updateFollowing = async (userName: string, following: boolean) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.updateFollowing(userName);\r\n      store.activityStore.updateAttendeeFollowing(userName);\r\n      runInAction(() => {\r\n        if (\r\n          this.profile &&\r\n          this.profile.userName !== store.userStore.user?.userName &&\r\n          this.profile.userName === userName\r\n        ) {\r\n          following\r\n            ? this.profile.followersCount++\r\n            : this.profile.followersCount--;\r\n          this.profile.following = !this.profile.following;\r\n        }\r\n        if (\r\n          this.profile &&\r\n          this.profile.userName === store.userStore.user?.userName\r\n        ) {\r\n          following\r\n            ? this.profile.followingCount++\r\n            : this.profile.followingCount--;\r\n        }\r\n        this.followings.forEach((profile) => {\r\n          if (profile.userName === userName) {\r\n            profile.following\r\n              ? profile.followersCount--\r\n              : profile.followersCount++;\r\n            profile.following = !profile.following;\r\n          }\r\n        });\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  loadFollowings = async (predicate: string) => {\r\n    this.loadingFollowings = true;\r\n\r\n    try {\r\n      const followings = await agent.Profiles.listFollowings(\r\n        this.profile!.userName,\r\n        predicate\r\n      );\r\n      runInAction(() => {\r\n        this.followings = followings;\r\n        this.loadingFollowings = false;\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n      runInAction(() => (this.loadingFollowings = false));\r\n    }\r\n  };\r\n\r\n  loadUserActivities = async (userName: string, predicate?: string) => {\r\n    this.loadingActivities = true;\r\n\r\n    try {\r\n      const activities = await agent.Profiles.listActivities(\r\n        userName,\r\n        predicate!\r\n      );\r\n\r\n      runInAction(() => {\r\n        this.userActivities = activities;\r\n        this.loadingActivities = false;\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n      runInAction(() => (this.loadingActivities = false));\r\n    }\r\n  };\r\n}\r\n","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { toast } from \"react-toastify\";\r\nimport { store } from \"..\";\r\nimport { history } from \"../../..\";\r\nimport agent from \"../../api/agent\";\r\n\r\nimport { User, UserFormValues } from \"../../models/user\";\r\n\r\nexport default class UserStore {\r\n  user: User | null = null;\r\n  fbAccessToken: string | null = null;\r\n  fbLoading = false;\r\n  refreshTokenTimeout: any;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  get isLoggedIn() {\r\n    return !!this.user;\r\n  }\r\n\r\n  login = async (data: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Account.login(data);\r\n      store.commonStore.setToken(user.token);\r\n      this.startRefreshTokenTimer(user);\r\n      runInAction(() => (this.user = user));\r\n      history.push(\"/activities\");\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  logout = () => {\r\n    store.commonStore.setToken(null);\r\n    window.localStorage.removeItem(\"jwt\");\r\n    this.user = null;\r\n    history.push(\"/\");\r\n  };\r\n\r\n  getUser = async () => {\r\n    try {\r\n      const user = await agent.Account.current();\r\n      runInAction(() => (this.user = user));\r\n      this.startRefreshTokenTimer(user);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  register = async (data: UserFormValues) => {\r\n    try {\r\n      await agent.Account.register(data);\r\n      history.push(`/account/registerSuccess?email=${data.email}`);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  setImage = (image: string) => {\r\n    if (this.user) this.user.image = image;\r\n  };\r\n\r\n  setDisplayName = (name: string) => {\r\n    if (this.user) this.user.displayName = name;\r\n  };\r\n\r\n  getFacebookLoginStatus = async () => {\r\n    window.FB.getLoginStatus((response) => {\r\n      if (response.status === \"connected\") {\r\n        this.fbAccessToken = response.authResponse.accessToken;\r\n      }\r\n    });\r\n  };\r\n\r\n  facebookLogin = () => {\r\n    this.fbLoading = true;\r\n    const apiLogin = (accessToken: string) => {\r\n      agent.Account.fbLogin(accessToken)\r\n        .then((user) => {\r\n          store.commonStore.setToken(user.token);\r\n          this.startRefreshTokenTimer(user);\r\n          runInAction(() => {\r\n            this.user = user;\r\n            this.fbLoading = false;\r\n          });\r\n          history.push(\"/activities\");\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          runInAction(() => (this.fbLoading = false));\r\n        });\r\n    };\r\n    if (this.fbAccessToken) {\r\n      apiLogin(this.fbAccessToken);\r\n    } else {\r\n      window.FB.login(\r\n        (response) => {\r\n          apiLogin(response.authResponse.accessToken);\r\n        },\r\n        { scope: \"public_profile,email\" }\r\n      );\r\n    }\r\n  };\r\n\r\n  refreshToken = async () => {\r\n    this.stopRefreshTokenTimer();\r\n    try {\r\n      const user = await agent.Account.refreshToken();\r\n      runInAction(() => (this.user = user));\r\n      store.commonStore.setToken(user.token);\r\n      this.startRefreshTokenTimer(user);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  resendEmailConfirmationLink = (email: string) => {\r\n    agent.Account.resendEmailConfirmationLink(email)\r\n      .then(() => {\r\n        toast.success(\r\n          \"Verification email has resent! - please check your email\"\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  private startRefreshTokenTimer(user: User) {\r\n    const jwtToken = JSON.parse(atob(user.token.split(\".\")[1]));\r\n    const expires = new Date(jwtToken.exp * 1000);\r\n    const timeout = expires.getTime() - Date.now() - 60 * 1000;\r\n    this.refreshTokenTimeout = setTimeout(this.refreshToken, timeout);\r\n  }\r\n\r\n  private stopRefreshTokenTimer() {\r\n    clearTimeout(this.refreshTokenTimeout);\r\n  }\r\n}\r\n","import { createContext } from \"react\";\r\n\r\nimport ActivityStore from \"./context/activity\";\r\nimport CommentStore from \"./context/comment\";\r\nimport CommonStore from \"./context/common\";\r\nimport ProfileStore from \"./context/profile\";\r\nimport UserStore from \"./context/user\";\r\n\r\ninterface Store {\r\n  activityStore: ActivityStore;\r\n  commonStore: CommonStore;\r\n  userStore: UserStore;\r\n  profileStore: ProfileStore;\r\n  commentStore: CommentStore;\r\n}\r\n\r\nexport const store: Store = {\r\n  activityStore: new ActivityStore(),\r\n  commonStore: new CommonStore(),\r\n  userStore: new UserStore(),\r\n  profileStore: new ProfileStore(),\r\n  commentStore: new CommentStore(),\r\n};\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport const StoreProvider = ({ children }: any) => {\r\n  return (\r\n    <StoreContext.Provider value={store}>{children}</StoreContext.Provider>\r\n  );\r\n};\r\n","import { makeAutoObservable, reaction } from \"mobx\";\r\n\r\nimport { ServerError } from \"../../models/serverError\";\r\n\r\nexport default class CommonStore {\r\n  error: ServerError | null = null;\r\n  token: string | null = localStorage.getItem(\"Reactivities:Token\");\r\n  appLoaded = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.token,\r\n      (token) => {\r\n        if (token) {\r\n          localStorage.setItem(\"Reactivities:Token\", token);\r\n        } else {\r\n          localStorage.removeItem(\"Reactivities:Token\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  setServerError = (error: ServerError) => {\r\n    this.error = error;\r\n  };\r\n\r\n  setToken = (token: string | null) => {\r\n    this.token = token;\r\n  };\r\n\r\n  setAppLoaded = () => {\r\n    this.appLoaded = true;\r\n  };\r\n}\r\n","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport {\r\n  HubConnection,\r\n  HubConnectionBuilder,\r\n  LogLevel,\r\n} from \"@microsoft/signalr\";\r\n\r\nimport { ChatComment } from \"../../models/comment\";\r\nimport { store } from \"..\";\r\n\r\nexport default class CommentStore {\r\n  comments: ChatComment[] = [];\r\n  hubConnection: HubConnection | null = null;\r\n\r\n  constructor() {\r\n      makeAutoObservable(this);\r\n  }\r\n\r\n  createHubConnection = (activityId: string) => {\r\n      if (store.activityStore.selectedActivity) {\r\n          this.hubConnection = new HubConnectionBuilder()\r\n              .withUrl(process.env.REACT_APP_CHAT_URL + '?activityId=' + activityId, {\r\n                  accessTokenFactory: () => store.userStore.user?.token!\r\n              })\r\n              .withAutomaticReconnect()\r\n              .configureLogging(LogLevel.Information)\r\n              .build();\r\n\r\n          this.hubConnection.start().catch(error => console.log('Error establishing the connection: ', error));\r\n\r\n          this.hubConnection.on('LoadComments', (comments: ChatComment[]) => {\r\n              runInAction(() => {\r\n                  comments.forEach(comment => {\r\n                      comment.createdAt = new Date(comment.createdAt);\r\n                  })\r\n                  this.comments = comments\r\n              });\r\n          })\r\n\r\n          this.hubConnection.on('ReceiveComment', (comment: ChatComment) => {\r\n              runInAction(() => {\r\n                  comment.createdAt = new Date(comment.createdAt);\r\n                  this.comments.unshift(comment)\r\n              });\r\n          })\r\n      }\r\n  }\r\n\r\n  stopHubConnection = () => {\r\n      this.hubConnection?.stop().catch(error => console.log('Error stopping connection: ', error));\r\n  }\r\n\r\n  clearComments = () => {\r\n      this.comments = [];\r\n      this.stopHubConnection();\r\n  }\r\n\r\n  addComment = async (values: any) => {\r\n      values.activityId = store.activityStore.selectedActivity?.id;\r\n      try {\r\n          await this.hubConnection?.invoke('SendComment', values);\r\n      } catch (error) {\r\n          console.log(error);\r\n      }\r\n  }\r\n}","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { useContext } from \"react\";\r\n\r\nimport { StoreContext } from \".\";\r\n\r\nexport default function useStore() {\r\n  return useContext(StoreContext);\r\n}\r\n","import { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router-dom\";\r\n\r\nimport useStore from \"../stores/useStore\";\r\n\r\ninterface Props extends RouteProps {\r\n    component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\r\n}\r\n\r\nexport default function PrivateRoute({component: Component, ...rest}: Props) {\r\n    const {userStore: {isLoggedIn}} = useStore();\r\n    return (\r\n        <Route \r\n            {...rest}\r\n            render={(props) => isLoggedIn ? <Component {...props} /> : <Redirect to='/' />}\r\n        />\r\n    )\r\n}","import { useLocation } from \"react-router-dom\";\r\n\r\nexport default function useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n","import { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\n\r\nimport useStore from \"../../../app/stores/useStore\";\r\nimport useQuery from \"../../../app/util/hooks\";\r\n\r\nexport default function RegisterSuccess() {\r\n  const email = useQuery().get(\"email\") as string;\r\n\r\n  const { userStore } = useStore();\r\n  const { resendEmailConfirmationLink } = userStore;\r\n\r\n  return (\r\n    <Segment placeholder textAlign=\"center\">\r\n      <Header icon color=\"green\">\r\n        <Icon name=\"check\" />\r\n        Successfully registered!\r\n      </Header>\r\n      <p>\r\n        Please check your email (including junk email) for the verification\r\n        email\r\n      </p>\r\n      {email && (\r\n        <>\r\n          <p>Didn't receive the email? Click the bellow button to resend</p>\r\n          <Button\r\n            primary\r\n            onClick={() => resendEmailConfirmationLink(email)}\r\n            content=\"Resend email\"\r\n            size=\"huge\"\r\n          />\r\n        </>\r\n      )}\r\n    </Segment>\r\n  );\r\n}\r\n","import { Dimmer, Loader } from \"semantic-ui-react\";\r\n\r\ninterface LoadingProp {\r\n  inverted?: boolean;\r\n  content?: string;\r\n}\r\n\r\nexport default function Loading({\r\n  inverted = true,\r\n  content = \"Loading...\",\r\n}: LoadingProp) {\r\n  return (\r\n    <Dimmer active={true} inverted={inverted}>\r\n      <Loader content={content} />\r\n    </Dimmer>\r\n  );\r\n}\r\n","import { Segment, Button, Placeholder } from \"semantic-ui-react\";\r\n\r\nexport default function ActivityListItemPlaceholder() {\r\n  return (\r\n    <>\r\n      <Placeholder fluid style={{ marginTop: 25 }}>\r\n        <Segment.Group>\r\n          <Segment style={{ minHeight: 110 }}>\r\n            <Placeholder>\r\n              <Placeholder.Header image>\r\n                <Placeholder.Line />\r\n                <Placeholder.Line />\r\n              </Placeholder.Header>\r\n              <Placeholder.Paragraph>\r\n                <Placeholder.Line />\r\n              </Placeholder.Paragraph>\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment>\r\n            <Placeholder>\r\n              <Placeholder.Line />\r\n              <Placeholder.Line />\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment secondary style={{ minHeight: 70 }} />\r\n          <Segment clearing>\r\n            <Button disabled color=\"blue\" floated=\"right\" content=\"View\" />\r\n          </Segment>\r\n        </Segment.Group>\r\n      </Placeholder>\r\n    </>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Button, Reveal } from \"semantic-ui-react\";\r\n\r\nimport useStore from \"../../../../app/stores/useStore\";\r\nimport { Profile } from \"../../../../app/models/profile\";\r\nimport { SyntheticEvent } from \"react\";\r\n\r\ninterface FollowButtonProps {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function FollowButton({ profile }: FollowButtonProps) {\r\n  const { profileStore, userStore } = useStore();\r\n  const { updateFollowing, loading } = profileStore;\r\n  const { user } = userStore;\r\n\r\n  if (user?.userName === profile.userName) return null;\r\n\r\n  function handleFollow(e: SyntheticEvent, userName: string) {\r\n    e.preventDefault();\r\n    profile.following\r\n      ? updateFollowing(userName, false)\r\n      : updateFollowing(userName, true);\r\n  }\r\n\r\n  return (\r\n    <Reveal animated=\"move\">\r\n      <Reveal.Content visible style={{ width: \"100%\" }}>\r\n        <Button\r\n          fluid\r\n          color=\"teal\"\r\n          content={profile.following ? \"Following\" : \"Not following\"}\r\n        />\r\n      </Reveal.Content>\r\n      <Reveal.Content hidden style={{ width: \"100%\" }}>\r\n        <Button\r\n          fluid\r\n          basic\r\n          color={profile.following ? \"red\" : \"green\"}\r\n          content={profile.following ? \"Unfollow\" : \"Follow\"}\r\n          loading={loading}\r\n          onClick={(e) => handleFollow(e, profile.userName)}\r\n        />\r\n      </Reveal.Content>\r\n    </Reveal>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Icon, Image } from \"semantic-ui-react\";\r\n\r\nimport { Profile } from \"../../../app/models/profile\";\r\nimport FollowButton from \"../ProfileHeader/FollowButton\";\r\n\r\ninterface ProfileCardProps {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileCard({ profile }: ProfileCardProps) {\r\n  function truncate(str: string | undefined) {\r\n    if (str) return str.length > 40 ? str.slice(0, 37) + \"...\" : str;\r\n  }\r\n\r\n  return (\r\n    <Card as={Link} to={`/profiles/${profile.userName}`}>\r\n      <Image src={profile.image || \"/assets/user.png\"} alt={profile.userName} />\r\n      <Card.Content>\r\n        <Card.Header>{profile.displayName}</Card.Header>\r\n        <Card.Description>{truncate(profile.bio)}</Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <Icon name=\"user\" />\r\n        {profile.followersCount} followers\r\n      </Card.Content>\r\n      <FollowButton {...{ profile }} />\r\n    </Card>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Image, List, Popup } from \"semantic-ui-react\";\r\n\r\nimport { Profile } from \"../../../../../app/models/profile\";\r\n\r\nimport ProfileCard from \"../../../../profiles/ProfileCard\";\r\n\r\ninterface AttendeesListProps {\r\n  attendees: Profile[];\r\n}\r\n\r\nexport default observer(function AttendeesList({\r\n  attendees,\r\n}: AttendeesListProps) {\r\n  const styles = {\r\n    borderColor: \"orange\",\r\n    borderWidth: 2,\r\n  };\r\n\r\n  return (\r\n    <List horizontal>\r\n      {attendees.map((attendee) => (\r\n        <Popup\r\n          hoverable\r\n          key={attendee.userName}\r\n          trigger={\r\n            <List.Item as={Link} to={`/profiles/${attendee.userName}`}>\r\n              <Image\r\n                size=\"mini\"\r\n                circular\r\n                src={attendee.image || \"/assets/user.png\"}\r\n                bordered\r\n                style={attendee.following ? styles : null}\r\n              />\r\n            </List.Item>\r\n          }\r\n        >\r\n          <Popup.Content>\r\n            <ProfileCard profile={attendee} />\r\n          </Popup.Content>\r\n        </Popup>\r\n      ))}\r\n    </List>\r\n  );\r\n});\r\n","import styled from \"styled-components\";\r\n\r\nimport { Situations } from \".\";\r\n\r\ninterface ContainerProps {\r\n  situation: Situations;\r\n}\r\n\r\nconst colors = {\r\n  master: \"#f1651e\",\r\n  positive: \"#4EAC4D\",\r\n  negative: \"#f94d6a\",\r\n  none: \"#DBDCE1\",\r\n  default: \"#03aba4\",\r\n};\r\n\r\nexport const Container = styled.button<ContainerProps>`\r\n  border: 0;\r\n  padding: 0.6rem 1.4rem;\r\n  border-radius: 0.5rem;\r\n  font-size: 1.4rem;\r\n  background-color: ${(props) => colors[props.situation]};\r\n  color: ${(props) => (props.situation === \"none\" ? \"#2c2c2c\" : \"#fff\")};\r\n  font-weight: 500;\r\n\r\n  transition: filter 0.2s;\r\n\r\n  &:hover {\r\n    filter: brightness(0.9);\r\n  }\r\n\r\n  &:disabled {\r\n    filter: brightness(0.85);\r\n  }\r\n\r\n  div {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n`;\r\n","import { ButtonHTMLAttributes, ReactNode } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport { Container } from \"./styles\";\r\n\r\nexport type Situations =\r\n  | \"master\"\r\n  | \"positive\"\r\n  | \"negative\"\r\n  | \"none\"\r\n  | \"default\";\r\n\r\ntype ButtonProps = ButtonHTMLAttributes<HTMLButtonElement> & {\r\n  children: ReactNode;\r\n  situation: Situations;\r\n  loading?: boolean;\r\n};\r\n\r\nexport default function Button({\r\n  children,\r\n  situation = \"default\",\r\n  loading = false,\r\n  ...props\r\n}: ButtonProps) {\r\n  return (\r\n    <Container {...{ situation }} {...props}>\r\n      {loading ? (\r\n        <Loader type=\"Oval\" height={16} width={50} color=\"#fff\" />\r\n      ) : (\r\n        children\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-radius: 0.8rem;\r\n  background-color: #fff;\r\n  box-shadow: rgba(0, 0, 0, 0.05) 0px 6px 24px 0px,\r\n    rgba(0, 0, 0, 0.1) 0px 0px 0px 2px;\r\n\r\n  .ui[class*=\"top attached\"].label {\r\n    position: inherit !important;\r\n    border-radius: inherit;\r\n    border-bottom-left-radius: 0;\r\n    border-bottom-right-radius: 0;\r\n  }\r\n\r\n  header {\r\n    padding: 1rem;\r\n    display: flex;\r\n    flex-direction: row;\r\n    gap: 2rem;\r\n    border-bottom: 2px solid #f2f1f2;\r\n\r\n    div.left-side {\r\n      img {\r\n        border-radius: 40px;\r\n        width: 80px;\r\n        height: 80px;\r\n      }\r\n    }\r\n\r\n    div.rest-side {\r\n      flex: 1;\r\n\r\n      h3 {\r\n        margin-bottom: 0.6rem;\r\n        font-size: 1.8rem;\r\n        font-weight: bold;\r\n      }\r\n\r\n      span {\r\n        font-size: 1.5rem;\r\n      }\r\n    }\r\n  }\r\n\r\n  div.content {\r\n    div.local {\r\n      padding: 1rem;\r\n      display: flex;\r\n      flex-direction: row;\r\n      gap: 2rem;\r\n\r\n      span {\r\n        display: flex;\r\n        align-items: center;\r\n\r\n        font-weight: 500;\r\n\r\n        svg {\r\n          margin-right: 0.6rem;\r\n        }\r\n      }\r\n    }\r\n\r\n    div.attendees {\r\n      padding: 1rem 1rem;\r\n      background-color: #f2f1f2;\r\n      color: #7c787a;\r\n    }\r\n  }\r\n\r\n  div.footer {\r\n    padding: 1rem;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n\r\n    span.venue {\r\n      padding: 1rem;\r\n      border-radius: 1rem;\r\n      background-color: #fff;\r\n      border: 2px solid #e6e6e6;\r\n      font-size: 1.2rem;\r\n      font-weight: 500;\r\n    }\r\n\r\n    div.options {\r\n      margin-left: auto;\r\n      display: flex;\r\n      flex-direction: row;\r\n      gap: 1rem;\r\n    }\r\n  }\r\n`;\r\n","import { SyntheticEvent, useState } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { FiClock, FiMapPin } from \"react-icons/fi\";\r\nimport { format } from \"date-fns\";\r\n\r\nimport AttendeesList from \"./AttendeesList\";\r\nimport Button from \"../../../../app/components/Button\";\r\n\r\nimport { Activity } from \"../../../../app/models/activity\";\r\nimport useStore from \"../../../../app/stores/useStore\";\r\n\r\nimport { Container } from \"./styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Item, Label } from \"semantic-ui-react\";\r\n\r\ninterface ActivityItemProps {\r\n  activity: Activity;\r\n}\r\n\r\nfunction ActivityItem({ activity }: ActivityItemProps) {\r\n  const { activityStore } = useStore();\r\n  const { deleteActivity, submitting } = activityStore;\r\n\r\n  const [target, setTarget] = useState(\"\");\r\n\r\n  function handleDeleteActivity(\r\n    e: SyntheticEvent<HTMLButtonElement>,\r\n    id: string\r\n  ) {\r\n    setTarget(e.currentTarget.name);\r\n    deleteActivity(id);\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      {activity.isCancelled && (\r\n        <Label\r\n          attached=\"top\"\r\n          color=\"red\"\r\n          content=\"Cancelled\"\r\n          style={{\r\n            textAlign: \"center\",\r\n          }}\r\n        />\r\n      )}\r\n      <header>\r\n        <div className=\"left-side\">\r\n          <img src={activity.host?.image || \"/assets/user.png\"} alt=\"User\" />\r\n        </div>\r\n        <div className=\"rest-side\">\r\n          <h3>{activity.title}</h3>\r\n          <span>\r\n            Hosted by{\" \"}\r\n            <Link to={`/profiles/${activity.host?.userName}`}>\r\n              {activity.host?.displayName}\r\n            </Link>\r\n          </span>\r\n        </div>\r\n        {activity.isHost && (\r\n          <Item.Description>\r\n            <Label basic color=\"orange\">\r\n              You are hosting this activity\r\n            </Label>\r\n          </Item.Description>\r\n        )}\r\n        {activity.isGoing && !activity.isHost && (\r\n          <Item.Description>\r\n            <Label basic color=\"green\">\r\n              You are going to this activity\r\n            </Label>\r\n          </Item.Description>\r\n        )}\r\n      </header>\r\n\r\n      <div className=\"content\">\r\n        <div className=\"local\">\r\n          <span className=\"date\">\r\n            <FiClock />\r\n            {format(activity.date!, \"dd MMM yyyy h:mm aa\")}\r\n          </span>\r\n          <span className=\"city\">\r\n            <FiMapPin />\r\n            {activity.city}\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"attendees\">\r\n          <AttendeesList attendees={activity.attendees!} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"footer\">\r\n        <span className=\"venue\">{activity.venue}</span>\r\n\r\n        <div className=\"options\">\r\n          {activity.isHost && (\r\n            <Button\r\n              name={activity.id}\r\n              situation=\"negative\"\r\n              onClick={(event) => handleDeleteActivity(event, activity.id)}\r\n              loading={target === activity.id && submitting}\r\n            >\r\n              Delete\r\n            </Button>\r\n          )}\r\n          <Link to={`/activities/${activity.id}`}>\r\n            <Button situation=\"default\">View</Button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default observer(ActivityItem);\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n\r\n  & + div {\r\n    margin-top: 2rem;\r\n  }\r\n\r\n  h3.group {\r\n    color: #03aba4;\r\n    font-size: 1.5rem;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n","import { observer } from \"mobx-react-lite\";\r\n\r\nimport useStore from \"../../../app/stores/useStore\";\r\nimport ActivityItem from \"./ActivityItem\";\r\n\r\nimport { Container, Content } from \"./styles\";\r\n\r\nexport default observer(function ActivityList() {\r\n  const { activityStore } = useStore();\r\n  const { groupedActivities } = activityStore;\r\n\r\n  return (\r\n    <Container>\r\n      {groupedActivities.map(([group, activities]) => (\r\n        <Content key={group}>\r\n          <h3 className=\"group\">{group}</h3>\r\n\r\n          {activities.map((activity) => (\r\n            <ActivityItem\r\n              {...{\r\n                key: activity.id,\r\n                activity,\r\n              }}\r\n            />\r\n          ))}\r\n        </Content>\r\n      ))}\r\n    </Container>\r\n  );\r\n});\r\n","import { shade } from \"polished\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface FilterProps {\r\n  activated?: boolean;\r\n}\r\n\r\nexport const Container = styled.div`\r\n  grid-area: activityFilters;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 2rem;\r\n  margin-top: 3rem;\r\n\r\n  div.content {\r\n    height: fit-content;\r\n    display: flex;\r\n    flex-direction: column;\r\n    border-radius: 0.8rem;\r\n    background-color: #fff;\r\n    box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;\r\n\r\n    header {\r\n      display: flex;\r\n      flex-direction: row;\r\n      align-items: center;\r\n      gap: 1rem;\r\n      padding: 1rem;\r\n      color: #03aba4;\r\n      font-weight: 500;\r\n\r\n      svg {\r\n        color: #03aba4;\r\n      }\r\n    }\r\n\r\n    div.container-filters {\r\n      display: flex;\r\n      flex-direction: column;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Filter = styled.div<FilterProps>`\r\n  cursor: pointer;\r\n  padding: 1rem;\r\n  border-top: 1px solid rgb(0, 0, 0, 0.15);\r\n\r\n  transition: background-color 0.2s;\r\n\r\n  background-color: ${(props) =>\r\n    props.activated ? shade(0.05, \"#fff\") : \"#fff\"};\r\n\r\n  &:hover {\r\n    background-color: ${shade(0.05, \"#fff\")};\r\n  }\r\n`;\r\n","import { observer } from \"mobx-react-lite\";\r\nimport Calendar from \"react-calendar\";\r\nimport { FiFilter } from \"react-icons/fi\";\r\n\r\nimport useStore from \"../../../app/stores/useStore\";\r\n\r\nimport { Container, Filter } from \"./styles\";\r\n\r\nexport default observer(function ActivityFilters() {\r\n  const { activityStore } = useStore();\r\n  const { predicate, setPredicate } = activityStore;\r\n\r\n  return (\r\n    <Container>\r\n      <div className=\"content\">\r\n        <header>\r\n          <FiFilter /> Filters\r\n        </header>\r\n\r\n        <div className=\"container-filters\">\r\n          <Filter\r\n            activated={!!predicate.has(\"all\")}\r\n            onClick={() => setPredicate(\"all\", \"true\")}\r\n          >\r\n            All activities\r\n          </Filter>\r\n          <Filter\r\n            activated={predicate.has(\"isGoing\")}\r\n            onClick={() => setPredicate(\"isGoing\", \"true\")}\r\n          >\r\n            I'm going\r\n          </Filter>\r\n          <Filter\r\n            activated={predicate.has(\"isHost\")}\r\n            onClick={() => setPredicate(\"isHost\", \"true\")}\r\n          >\r\n            I'm hosting\r\n          </Filter>\r\n        </div>\r\n      </div>\r\n\r\n      <Calendar\r\n        onChange={(date: any) => setPredicate(\"startDate\", date)}\r\n        value={predicate.get(\"startDate\") || new Date()}\r\n      />\r\n    </Container>\r\n  );\r\n});\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 350px;\r\n  grid-template-areas: \"activityList activityFilters\";\r\n  gap: 3rem;\r\n`;\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { useEffect, useState } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport { Loader } from \"semantic-ui-react\";\r\n\r\nimport useStore from \"../../app/stores/useStore\";\r\nimport { PagingParams } from \"../../app/models/pagination\";\r\n\r\nimport ActivityListItemPlaceholder from \"./ActivityListItemPlaceholder\";\r\nimport ActivityList from \"./ActivityList\";\r\nimport ActivityFilters from \"./ActivityFilters\";\r\n\r\nimport { Container } from \"./styles\";\r\n\r\nexport default observer(function ActivityDashboard() {\r\n  const { activityStore } = useStore();\r\n  const {\r\n    loadActivities,\r\n    loadingInitial,\r\n    activitiesRegister,\r\n    setPagingParams,\r\n    pagination,\r\n  } = activityStore;\r\n\r\n  const [loadingNext, setLoadingNext] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (activitiesRegister.size <= 1) loadActivities();\r\n  }, [loadActivities, activitiesRegister.size]);\r\n\r\n  function handleGetNext() {\r\n    setLoadingNext(true);\r\n    setPagingParams(new PagingParams(pagination!.currentPage + 1));\r\n    loadActivities().then(() => setLoadingNext(false));\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      {loadingInitial && !loadingNext ? (\r\n        <div\r\n          style={{\r\n            gridArea: \"activityList\",\r\n          }}\r\n        >\r\n          <ActivityListItemPlaceholder />\r\n          <ActivityListItemPlaceholder />\r\n        </div>\r\n      ) : (\r\n        <div\r\n          style={{\r\n            gridArea: \"activityList\",\r\n          }}\r\n        >\r\n          <InfiniteScroll\r\n            pageStart={0}\r\n            loadMore={handleGetNext}\r\n            hasMore={\r\n              !loadingNext &&\r\n              !!pagination &&\r\n              pagination.currentPage < pagination.totalPages\r\n            }\r\n            initialLoad={false}\r\n          >\r\n            <ActivityList />\r\n          </InfiniteScroll>\r\n\r\n          <Loader active={loadingNext && !loadingInitial} />\r\n        </div>\r\n      )}\r\n\r\n      <ActivityFilters />\r\n    </Container>\r\n  );\r\n});\r\n","import styled from \"styled-components\";\r\n\r\ninterface ContainerProps {\r\n  error: boolean;\r\n}\r\n\r\nexport const Container = styled.div<ContainerProps>`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  input {\r\n    background-color: ${(props) => (props.error ? \"#f8d7da\" : \"#fff\")};\r\n    padding: 1rem;\r\n    border: 1px solid ${(props) => (props.error ? \"#e7bfc3\" : \"#e6e6e6\")};\r\n    border-radius: 0.5rem;\r\n    outline: none;\r\n\r\n    &::placeholder {\r\n      color: ${(props) => (props.error ? \"#874f4f\" : \"#d9d7d7\")};\r\n    }\r\n  }\r\n\r\n  span {\r\n    margin-top: 0.3rem;\r\n  }\r\n`;\r\n","import { InputHTMLAttributes } from \"react\";\r\nimport { useField } from \"formik\";\r\n\r\nimport { Container } from \"./styles\";\r\n\r\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\r\n  name: string;\r\n  placeholder: string;\r\n  label?: string;\r\n}\r\n\r\nexport default function Input({ type = \"text\", ...props }: InputProps) {\r\n  const [field, meta] = useField(props.name);\r\n\r\n  return (\r\n    <Container error={meta.touched && !!meta.error}>\r\n      <label htmlFor=\"\">{props.label}</label>\r\n      <input {...field} {...props} {...{ type }} />\r\n      {meta.touched && meta.error ? <span>{meta.error}</span> : null}\r\n    </Container>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\ninterface ContainerProps {\r\n  error: boolean;\r\n}\r\n\r\nexport const Container = styled.div<ContainerProps>`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  textarea {\r\n    background-color: ${(props) => (props.error ? \"#f8d7da\" : \"#fff\")};\r\n    padding: 1rem;\r\n    border: 1px solid ${(props) => (props.error ? \"#e7bfc3\" : \"#e6e6e6\")};\r\n    border-radius: 0.5rem;\r\n    outline: none;\r\n\r\n    &::placeholder {\r\n      color: ${(props) => (props.error ? \"#874f4f\" : \"#d9d7d7\")};\r\n    }\r\n  }\r\n\r\n  span {\r\n    margin-top: 0.3rem;\r\n  }\r\n`;\r\n","import { TextareaHTMLAttributes } from \"react\";\r\nimport { useField } from \"formik\";\r\n\r\nimport { Container } from \"./styles\";\r\n\r\ninterface TextareaProps extends TextareaHTMLAttributes<HTMLTextAreaElement> {\r\n  name: string;\r\n  placeholder: string;\r\n  label?: string;\r\n}\r\n\r\nexport default function Textarea(props: TextareaProps) {\r\n  const [field, meta] = useField(props.name);\r\n\r\n  return (\r\n    <Container error={meta.touched && !!meta.error}>\r\n      <label htmlFor=\"\">{props.label}</label>\r\n      <textarea {...field} {...props} />\r\n      {meta.touched && meta.error ? <span>{meta.error}</span> : null}\r\n    </Container>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\ninterface ContainerProps {\r\n  error: boolean;\r\n}\r\n\r\nexport const Container = styled.div<ContainerProps>`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  input {\r\n    background-color: ${(props) => (props.error ? \"#f8d7da\" : \"#fff\")};\r\n    padding: 1rem;\r\n    border: 1px solid ${(props) => (props.error ? \"#e7bfc3\" : \"#e6e6e6\")};\r\n    border-radius: 0.5rem;\r\n    outline: none;\r\n\r\n    &::placeholder {\r\n      color: ${(props) => (props.error ? \"#874f4f\" : \"#d9d7d7\")};\r\n    }\r\n  }\r\n\r\n  span {\r\n    margin-top: 0.3rem;\r\n  }\r\n`;\r\n","import { InputHTMLAttributes } from \"react\";\r\nimport { Select } from \"semantic-ui-react\";\r\nimport { useField } from \"formik\";\r\n\r\nimport { Container } from \"./styles\";\r\n\r\ninterface SelectInputProps extends InputHTMLAttributes<HTMLSelectElement> {\r\n  name: string;\r\n  placeholder: string;\r\n  options: any;\r\n  label?: string;\r\n}\r\n\r\nexport default function SelectInput(props: SelectInputProps) {\r\n  const [field, meta, helpers] = useField(props.name);\r\n\r\n  return (\r\n    <Container error={meta.touched && !!meta.error}>\r\n      <label htmlFor=\"\">{props.label}</label>\r\n      <Select\r\n        clearable\r\n        options={props.options}\r\n        value={field.value || null}\r\n        onChange={(e, d) => helpers.setValue(d.value)}\r\n        onBlur={() => helpers.setTouched(true)}\r\n        placeholder={props.placeholder}\r\n      />\r\n      {meta.touched && meta.error ? <span>{meta.error}</span> : null}\r\n    </Container>\r\n  );\r\n}\r\n","export const category = [\r\n  { text: \"Drinks\", value: \"drinks\" },\r\n  { text: \"Culture\", value: \"culture\" },\r\n  { text: \"Film\", value: \"film\" },\r\n  { text: \"Music\", value: \"music\" },\r\n  { text: \"Travel\", value: \"travel\" },\r\n];\r\n","import styled from \"styled-components\";\r\n\r\ninterface ContainerProps {\r\n  error: boolean;\r\n}\r\n\r\nexport const Container = styled.div<ContainerProps>`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  input {\r\n    background-color: ${(props) => (props.error ? \"#f8d7da\" : \"#fff\")};\r\n    padding: 1rem;\r\n    border: 1px solid ${(props) => (props.error ? \"#e7bfc3\" : \"#e6e6e6\")};\r\n    border-radius: 0.5rem;\r\n    outline: none;\r\n\r\n    &::placeholder {\r\n      color: ${(props) => (props.error ? \"#874f4f\" : \"#d9d7d7\")};\r\n    }\r\n  }\r\n\r\n  span {\r\n    margin-top: 0.3rem;\r\n  }\r\n`;\r\n","import { useField } from \"formik\";\r\nimport DatePicker, { ReactDatePickerProps } from \"react-datepicker\";\r\n\r\nimport { Container } from \"./styles\";\r\n\r\nexport default function DateInput(props: Partial<ReactDatePickerProps>) {\r\n  const [field, meta, helpers] = useField(props.name!);\r\n\r\n  return (\r\n    <Container error={meta.touched && !!meta.error}>\r\n      <DatePicker\r\n        {...field}\r\n        {...props}\r\n        selected={(field.value && new Date(field.value)) || null}\r\n        onChange={(date: Date) => helpers.setValue(date)}\r\n      />\r\n      {meta.touched && meta.error ? <span>{meta.error}</span> : null}\r\n    </Container>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  grid-area: activityForm;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: fit-content;\r\n  background-color: #fff;\r\n  border-radius: 0.8rem;\r\n  padding: 1.4rem;\r\n\r\n  h2 {\r\n    font-size: 1.4rem;\r\n    color: #03aba4;\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  div.content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 1rem;\r\n  }\r\n\r\n  div.footer {\r\n    margin-top: 1rem;\r\n    display: flex;\r\n    flex-direction: row-reverse;\r\n    gap: 1rem;\r\n  }\r\n`;\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport { ActivityFormValues } from \"../../../app/models/activity\";\r\n\r\nimport Input from \"../../../app/components/Input\";\r\nimport Button from \"../../../app/components/Button\";\r\nimport Loading from \"../../../app/components/Loading\";\r\nimport Textarea from \"../../../app/components/Textarea\";\r\nimport SelectInput from \"../../../app/components/SelectInput\";\r\nimport { category } from \"../../../app/components/SelectInput/Options/category\";\r\nimport DateInput from \"../../../app/components/DateInput\";\r\nimport useStore from \"../../../app/stores/useStore\";\r\n\r\nimport { Container } from \"./styles\";\r\n\r\ninterface ActivityFormParams {\r\n  id: string;\r\n}\r\n\r\nconst validationSchema = Yup.object({\r\n  title: Yup.string().required(\"Title is required\"),\r\n  category: Yup.string().required(\"Category is required\"),\r\n  description: Yup.string().required(\"Description is required\"),\r\n  date: Yup.string().required(\"Date is required\").nullable(),\r\n  city: Yup.string().required(\"City is required\"),\r\n  venue: Yup.string().required(\"Venue is required\"),\r\n});\r\n\r\nexport default observer(function ActivityForm() {\r\n  const { activityStore } = useStore();\r\n  const { createActivity, updateActivity, loadActivity, loadingInitial } =\r\n    activityStore;\r\n  const history = useHistory();\r\n  const { id } = useParams<ActivityFormParams>();\r\n  const [activity, setActivity] = useState<ActivityFormValues>(\r\n    new ActivityFormValues()\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      loadActivity(id).then((activity) => {\r\n        setActivity(new ActivityFormValues(activity));\r\n      });\r\n    }\r\n  }, [id, loadActivity]);\r\n\r\n  function handleFormSubmit(data: ActivityFormValues) {\r\n    if (!data.id) {\r\n      let newActivity = {\r\n        ...data,\r\n        id: uuid(),\r\n      };\r\n\r\n      createActivity(newActivity).then(() => {\r\n        history.push(`/activities/${newActivity.id}`);\r\n      });\r\n    } else {\r\n      updateActivity({\r\n        ...data,\r\n        id: activity.id,\r\n      }).then(() => {\r\n        history.push(`/activities/${activity.id}`);\r\n      });\r\n    }\r\n  }\r\n\r\n  if (loadingInitial) return <Loading content=\"Loading activity on form...\" />;\r\n\r\n  return (\r\n    <Container>\r\n      <h2>Activity details</h2>\r\n\r\n      <Formik\r\n        validationSchema={validationSchema}\r\n        enableReinitialize\r\n        initialValues={activity}\r\n        onSubmit={handleFormSubmit}\r\n      >\r\n        {({ handleSubmit, isValid, isSubmitting, dirty }) => (\r\n          <Form onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <div className=\"content\">\r\n              <Input name=\"title\" placeholder=\"Title\" />\r\n              <Textarea\r\n                name=\"description\"\r\n                placeholder=\"Description\"\r\n                cols={3}\r\n                rows={4}\r\n              />\r\n              <SelectInput\r\n                options={category}\r\n                name=\"category\"\r\n                placeholder=\"Category\"\r\n              />\r\n              <DateInput\r\n                name=\"date\"\r\n                placeholderText=\"Date\"\r\n                showTimeSelect\r\n                timeCaption=\"time\"\r\n                dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n              />\r\n\r\n              <h2>Location details</h2>\r\n              <Input name=\"city\" placeholder=\"City\" />\r\n              <Input name=\"venue\" placeholder=\"Venue\" />\r\n            </div>\r\n\r\n            <div className=\"footer\">\r\n              <Button\r\n                type=\"submit\"\r\n                situation=\"positive\"\r\n                loading={isSubmitting}\r\n                disabled={!isValid || !dirty || isSubmitting}\r\n              >\r\n                Submit\r\n              </Button>\r\n              <Link to=\"/activities\">\r\n                <Button type=\"button\" situation=\"none\">\r\n                  Cancel\r\n                </Button>\r\n              </Link>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Container>\r\n  );\r\n});\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  grid-area: chat;\r\n  margin-bottom: 2rem;\r\n\r\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 4px 12px;\r\n\r\n  header {\r\n    padding: 1rem;\r\n    border-top-left-radius: 0.8rem;\r\n    border-top-right-radius: 0.8rem;\r\n    background-color: #03aba4;\r\n    text-align: center;\r\n    color: #fff;\r\n    font-size: 1.4rem;\r\n    font-weight: 500;\r\n  }\r\n\r\n  div.sub-container {\r\n    padding: 1rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: #fff;\r\n    gap: 2rem;\r\n\r\n    div.chat-container {\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 2rem;\r\n\r\n      div.message-container {\r\n        display: flex;\r\n        flex-direction: row;\r\n        gap: 1.4rem;\r\n\r\n        img {\r\n          height: 38px;\r\n        }\r\n\r\n        div.rest-side {\r\n          flex: 1;\r\n          display: flex;\r\n          flex-direction: column;\r\n          gap: 0.6rem;\r\n\r\n          div.header-message {\r\n            display: flex;\r\n            flex-direction: row;\r\n            align-items: center;\r\n            gap: 1rem;\r\n\r\n            h3 {\r\n              font-size: 1.4rem;\r\n              font-weight: 600;\r\n            }\r\n\r\n            span {\r\n              font-size: 1.2rem;\r\n              color: #bebebe;\r\n            }\r\n          }\r\n\r\n          div.message {\r\n            font-size: 1.4rem;\r\n            white-space: pre-wrap;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    form.ui.form {\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 1rem;\r\n\r\n      button[type=\"submit\"] {\r\n        margin-left: auto;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { formatDistanceToNow } from \"date-fns\";\r\nimport { Loader } from \"semantic-ui-react\";\r\nimport { Field, FieldProps, Form, Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport useStore from \"../../../../app/stores/useStore\";\r\n\r\nimport { Container } from \"./styles\";\r\n\r\ninterface ChatProps {\r\n  activityId: string;\r\n}\r\n\r\nconst schema = Yup.object({\r\n  body: Yup.string().required(),\r\n});\r\n\r\nexport default observer(function Chat({ activityId }: ChatProps) {\r\n  const { commentStore } = useStore();\r\n  const { createHubConnection, clearComments, comments, addComment } =\r\n    commentStore;\r\n\r\n  useEffect(() => {\r\n    if (activityId) {\r\n      createHubConnection(activityId);\r\n    }\r\n\r\n    return () => {\r\n      clearComments();\r\n    };\r\n  }, [activityId, createHubConnection, clearComments]);\r\n\r\n  return (\r\n    <Container>\r\n      <header>Chat about this event</header>\r\n\r\n      <div className=\"sub-container\">\r\n        <Formik\r\n          onSubmit={(values, { resetForm }) =>\r\n            addComment(values).then(() => resetForm())\r\n          }\r\n          initialValues={{ body: \"\" }}\r\n          validationSchema={schema}\r\n        >\r\n          {({ isSubmitting, isValid, handleSubmit }) => (\r\n            <Form className=\"ui form\">\r\n              <Field name=\"body\">\r\n                {(props: FieldProps) => (\r\n                  <div\r\n                    style={{\r\n                      position: \"relative\",\r\n                    }}\r\n                  >\r\n                    <Loader active={isSubmitting} />\r\n                    <textarea\r\n                      placeholder=\"Enter your comment (Enter submit, SHIFT + enter for new line)\"\r\n                      rows={2}\r\n                      {...props.field}\r\n                      onKeyPress={(e) => {\r\n                        if (e.key === \"Enter\" && e.shiftKey) {\r\n                          e.preventDefault();\r\n                          props.form.setFieldValue(\r\n                            \"body\",\r\n                            props.field.value + \"\\n\"\r\n                          );\r\n                        }\r\n\r\n                        if (e.key === \"Enter\" && !e.shiftKey) {\r\n                          e.preventDefault();\r\n                          isValid && handleSubmit();\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </Field>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n\r\n        <div className=\"chat-container\">\r\n          {comments.map((comment) => (\r\n            <div className=\"message-container\" key={comment.id}>\r\n              <img\r\n                src={comment.image || \"/assets/user.png\"}\r\n                alt={comment.userName}\r\n              />\r\n              <div className=\"rest-side\">\r\n                <div className=\"header-message\">\r\n                  <Link to={`/profiles/${comment.userName}`}>\r\n                    <h3>{comment.displayName}</h3>\r\n                  </Link>\r\n                  <span>{formatDistanceToNow(comment.createdAt)} ago</span>\r\n                </div>\r\n                <div className=\"message\">{comment.body}</div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n});\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  grid-area: header;\r\n\r\n  div.content {\r\n    position: relative;\r\n    margin-bottom: -0.3rem;\r\n\r\n    img {\r\n      width: 100%;\r\n      filter: brightness(0.4);\r\n    }\r\n\r\n    div.hover-image {\r\n      position: absolute;\r\n      left: 0;\r\n      right: 0;\r\n      bottom: 0;\r\n      margin: 0 auto;\r\n      max-width: 80%;\r\n      width: 100%;\r\n      display: flex;\r\n      flex-direction: column;\r\n      color: #fff;\r\n      padding-bottom: 4rem;\r\n\r\n      h1 {\r\n        margin-bottom: 0;\r\n      }\r\n\r\n      span {\r\n        color: #f1f1f1;\r\n        font-size: 1.4rem;\r\n      }\r\n\r\n      span.hostedBy {\r\n        margin-top: 1rem;\r\n\r\n        a {\r\n          color: #fff;\r\n          font-weight: 500;\r\n\r\n          transition: filter 0.2s;\r\n\r\n          &:hover {\r\n            filter: brightness(0.8);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  div.footer {\r\n    padding: 1rem;\r\n    display: flex;\r\n    flex-direction: row;\r\n    background-color: #fff;\r\n    border-bottom-left-radius: 0.8rem;\r\n    border-bottom-right-radius: 0.8rem;\r\n    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\r\n\r\n    div.actions {\r\n      width: 100%;\r\n      display: flex;\r\n      flex-direction: row;\r\n      gap: 1rem;\r\n    }\r\n\r\n    div.rest-side {\r\n      margin-left: auto;\r\n    }\r\n  }\r\n`;\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { format } from \"date-fns\";\r\n\r\nimport Button from \"../../../../app/components/Button\";\r\nimport { Activity } from \"../../../../app/models/activity\";\r\n\r\nimport { Container } from \"./styles\";\r\nimport useStore from \"../../../../app/stores/useStore\";\r\nimport { Label } from \"semantic-ui-react\";\r\n\r\ninterface HeaderProps {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function Header({ activity }: HeaderProps) {\r\n  const { activityStore } = useStore();\r\n  const { updateAttendance, loading, cancelActivityToggle } = activityStore;\r\n\r\n  return (\r\n    <Container>\r\n      <div className=\"content\">\r\n        {activity.isCancelled && (\r\n          <Label\r\n            style={{\r\n              position: \"absolute\",\r\n              zIndex: 1000,\r\n              left: -14,\r\n              top: 20,\r\n            }}\r\n            ribbon\r\n            color=\"red\"\r\n            content=\"Cancelled\"\r\n          />\r\n        )}\r\n        <img\r\n          src={`/assets/categoryImages/${activity.category}.jpg`}\r\n          alt={activity.category}\r\n        />\r\n        <div className=\"hover-image\">\r\n          <h1>{activity.title}</h1>\r\n          <span>{format(activity.date!, \"dd MMM yyyy\")}</span>\r\n          <span className=\"hostedBy\">\r\n            Hosted by{\" \"}\r\n            <span>\r\n              <Link to={`/profiles/${activity.host?.userName}`}>\r\n                {activity.host?.displayName}\r\n              </Link>\r\n            </span>\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div className=\"footer\">\r\n        <div className=\"actions\">\r\n          {activity.isHost ? (\r\n            <>\r\n              <Button\r\n                situation={activity.isCancelled ? \"positive\" : \"negative\"}\r\n                onClick={cancelActivityToggle}\r\n                loading={loading}\r\n              >\r\n                {activity.isCancelled\r\n                  ? \"Re-activate Activity\"\r\n                  : \"Cancel Activity\"}\r\n              </Button>\r\n              <div className=\"rest-side\">\r\n                <Link to={`/manage/${activity.id}`}>\r\n                  <Button situation=\"master\" disabled={activity.isCancelled}>\r\n                    Manage event\r\n                  </Button>\r\n                </Link>\r\n              </div>\r\n            </>\r\n          ) : activity.isGoing ? (\r\n            <Button\r\n              situation=\"none\"\r\n              loading={loading}\r\n              onClick={updateAttendance}\r\n            >\r\n              Cancel attendance\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              situation=\"default\"\r\n              loading={loading}\r\n              onClick={updateAttendance}\r\n              disabled={activity.isCancelled}\r\n            >\r\n              Join activity\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n});\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  grid-area: information;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-radius: 0.5rem;\r\n  background-color: #fff;\r\n  box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;\r\n\r\n  div.content {\r\n    padding: 1.4rem 2rem;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n\r\n    font-size: 1.5rem;\r\n    font-weight: 500;\r\n\r\n    & + div {\r\n      border-top: 2px solid #e6e6e6;\r\n    }\r\n\r\n    svg {\r\n      color: #03aba4;\r\n      margin-right: 2rem;\r\n    }\r\n  }\r\n`;\r\n","import { FiInfo, FiCalendar, FiMapPin } from \"react-icons/fi\";\r\nimport { format } from \"date-fns\";\r\n\r\nimport { Activity } from \"../../../../app/models/activity\";\r\n\r\nimport { Container } from \"./styles\";\r\n\r\ninterface InformationProps {\r\n  activity: Activity;\r\n}\r\n\r\nexport default function Information({ activity }: InformationProps) {\r\n  return (\r\n    <Container>\r\n      <div className=\"content\">\r\n        <FiInfo />\r\n        {activity.description}\r\n      </div>\r\n      <div className=\"content\">\r\n        <FiCalendar />\r\n        {format(activity.date!, \"dd MMM yyyy\")}\r\n      </div>\r\n      <div className=\"content\">\r\n        <FiMapPin />\r\n        {activity.venue}, {activity.city}\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  grid-area: sideBar;\r\n\r\n  height: fit-content;\r\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 4px 12px;\r\n\r\n  header {\r\n    padding: 1rem;\r\n    border-top-left-radius: 0.8rem;\r\n    border-top-right-radius: 0.8rem;\r\n    background-color: #03aba4;\r\n    text-align: center;\r\n    color: #fff;\r\n    font-size: 1.4rem;\r\n    font-weight: 500;\r\n  }\r\n\r\n  div.container-people {\r\n    padding: 1rem;\r\n    background-color: #fff;\r\n\r\n    div.content {\r\n      position: relative;\r\n      display: flex;\r\n      flex-direction: row;\r\n      gap: 1rem;\r\n\r\n      div.left-side {\r\n        img {\r\n          height: 80px;\r\n        }\r\n      }\r\n\r\n      div.rest-side {\r\n        flex: 1;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n\r\n        h3 {\r\n          color: #1e6799;\r\n          font-size: 1.6rem;\r\n          font-weight: bold;\r\n          margin-bottom: 0.4rem;\r\n        }\r\n\r\n        span {\r\n          font-weight: 500;\r\n          font-size: 1.4rem;\r\n          color: #ffbe41;\r\n        }\r\n      }\r\n\r\n      div.hosted {\r\n        position: absolute;\r\n        right: -4rem;\r\n        bottom: 3.5rem;\r\n        padding: 0.5rem 2rem;\r\n        color: #fff;\r\n        background-color: #f1651e;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Activity } from \"../../../../app/models/activity\";\r\n\r\nimport { Container } from \"./styles\";\r\n\r\ninterface SideBarProps {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function SideBar({\r\n  activity: { attendees, host },\r\n}: SideBarProps) {\r\n  if (!attendees) return null;\r\n\r\n  return (\r\n    <Container>\r\n      <header>\r\n        {attendees.length} {attendees.length === 1 ? \"Person\" : \"People\"}\r\n      </header>\r\n\r\n      <div className=\"container-people\">\r\n        {attendees.map((attendee) => (\r\n          <div className=\"content\" key={attendee.userName}>\r\n            <div className=\"left-side\">\r\n              <img\r\n                src={attendee.image || \"/assets/user.png\"}\r\n                alt={attendee.userName}\r\n              />\r\n            </div>\r\n            <div className=\"rest-side\">\r\n              <Link to={`/profiles/${attendee.userName}`}>\r\n                <h3>{attendee.displayName}</h3>\r\n              </Link>\r\n              {attendee.following && <span>Following</span>}\r\n            </div>\r\n            {attendee.userName === host?.userName && (\r\n              <div className=\"hosted\">\r\n                <span>Host</span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Container>\r\n  );\r\n});\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 300px;\r\n  grid-template-areas:\r\n    \"header sideBar\"\r\n    \"information sideBar\"\r\n    \"chat sideBar\";\r\n  grid-gap: 2rem;\r\n`;\r\n","import { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nimport Chat from \"./Chat\";\r\nimport Header from \"./Header\";\r\nimport Information from \"./Information\";\r\nimport SideBar from \"./SideBar\";\r\n\r\nimport useStore from \"../../../app/stores/useStore\";\r\nimport Loading from \"../../../app/components/Loading\";\r\n\r\nimport { Container } from \"./styles\";\r\n\r\ninterface ActivityDetailsParams {\r\n  id: string;\r\n}\r\n\r\nexport default observer(function ActivityDetails() {\r\n  const { activityStore } = useStore();\r\n  const {\r\n    selectedActivity: activity,\r\n    loadActivity,\r\n    loadingInitial,\r\n    clearSelectedActivity,\r\n  } = activityStore;\r\n  const { id } = useParams<ActivityDetailsParams>();\r\n\r\n  useEffect(() => {\r\n    if (id) loadActivity(id);\r\n\r\n    return () => {\r\n      clearSelectedActivity();\r\n    };\r\n  }, [id, loadActivity, clearSelectedActivity]);\r\n\r\n  if (loadingInitial || !activity) return <Loading />;\r\n\r\n  return (\r\n    <Container>\r\n      <Header {...{ activity }} />\r\n      <Information {...{ activity }} />\r\n      <Chat {...{ activityId: activity.id }} />\r\n      <SideBar {...{ activity }} />\r\n    </Container>\r\n  );\r\n});\r\n","import styled from \"styled-components\";\r\n\r\ninterface ContentProps {\r\n  isLoggedIn: boolean;\r\n}\r\n\r\nexport const Container = styled.div`\r\n  flex: 1;\r\n  background-image: linear-gradient(\r\n    135deg,\r\n    rgb(24, 42, 115) 0%,\r\n    rgb(33, 138, 174) 69%,\r\n    rgb(32, 167, 172) 89%\r\n  );\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 3rem;\r\n  color: #fff;\r\n\r\n  h1 {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    gap: 1rem;\r\n    font-size: 6rem;\r\n\r\n    img {\r\n      height: 60px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div<ContentProps>`\r\n  display: flex;\r\n  flex-direction: ${(props) => (props.isLoggedIn ? \"column\" : \"row\")};\r\n  gap: 1rem;\r\n  text-align: center;\r\n\r\n  h2 {\r\n    font-size: 2.6rem;\r\n  }\r\n\r\n  button {\r\n    padding: 1.4rem 6rem;\r\n    color: #fff;\r\n    font-size: 2rem;\r\n    background-color: transparent;\r\n    font-weight: 500;\r\n    border: 2px solid #fff;\r\n    border-radius: 0.8rem;\r\n\r\n    &.btn-facebook {\r\n      display: flex;\r\n      flex-direction: row;\r\n      align-items: center;\r\n      gap: 1rem;\r\n    }\r\n  }\r\n`;\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nimport useStore from \"../../app/stores/useStore\";\r\n\r\nimport { Container, Content } from \"./styles\";\r\n\r\nexport default observer(function Home() {\r\n  const { userStore } = useStore();\r\n  const { isLoggedIn, facebookLogin, fbLoading } = userStore;\r\n\r\n  return (\r\n    <Container>\r\n      <h1>\r\n        <img src=\"/assets/logo.png\" alt=\"logo\" />\r\n        Reactivities\r\n      </h1>\r\n      <Content {...{ isLoggedIn }}>\r\n        {isLoggedIn ? (\r\n          <>\r\n            <h2>Welcome to Reactivities</h2>\r\n\r\n            <Link to=\"/activities\">\r\n              <button>Go to Activities</button>\r\n            </Link>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Button\r\n              size=\"huge\"\r\n              inverted\r\n              color=\"facebook\"\r\n              content=\"Login with Facebook\"\r\n              onClick={facebookLogin}\r\n              loading={fbLoading}\r\n            />\r\n\r\n            <Link to=\"/login\">\r\n              <button>Login</button>\r\n            </Link>\r\n\r\n            <Link to=\"/register\">\r\n              <button>Register</button>\r\n            </Link>\r\n          </>\r\n        )}\r\n      </Content>\r\n    </Container>\r\n  );\r\n});\r\n","import { Message } from \"semantic-ui-react\";\r\n\r\ninterface ValidationErrorsProps {\r\n  errors: any;\r\n}\r\n\r\nexport default function ValidationErrors({ errors }: ValidationErrorsProps) {\r\n  return (\r\n    <Message error>\r\n      <Message.List>\r\n        {errors.map((error: any, i: any) => (\r\n          <Message.Item key={i}>{error}</Message.Item>\r\n        ))}\r\n      </Message.List>\r\n    </Message>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport ValidationErrors from \"./ValidationErrors\";\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nexport default function TestErrors() {\r\n  const [errors, setErrors] = useState(null);\r\n\r\n  function handleNotFound() {\r\n    axios\r\n      .get(baseUrl + \"buggy/not-found\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleBadRequest() {\r\n    axios\r\n      .get(baseUrl + \"buggy/bad-request\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleServerError() {\r\n    axios\r\n      .get(baseUrl + \"buggy/server-error\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleUnauthorised() {\r\n    axios\r\n      .get(baseUrl + \"buggy/unauthorised\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleBadGuid() {\r\n    axios\r\n      .get(baseUrl + \"activities/notaguid\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleValidationError() {\r\n    axios.post(baseUrl + \"activities\", {}).catch((err) => setErrors(err));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header as=\"h1\" content=\"Test Error component\" />\r\n      <Segment>\r\n        <Button.Group widths=\"7\">\r\n          <Button onClick={handleNotFound} content=\"Not Found\" basic primary />\r\n          <Button\r\n            onClick={handleBadRequest}\r\n            content=\"Bad Request\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleValidationError}\r\n            content=\"Validation Error\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleServerError}\r\n            content=\"Server Error\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleUnauthorised}\r\n            content=\"Unauthorised\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button onClick={handleBadGuid} content=\"Bad Guid\" basic primary />\r\n        </Button.Group>\r\n      </Segment>\r\n\r\n      {errors && <ValidationErrors errors={errors} />}\r\n    </>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  margin: 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 1rem;\r\n  background-color: #fff;\r\n  border-radius: 0.8rem;\r\n  border: 0.2rem solid #e6e6f0;\r\n  padding: 6rem;\r\n  text-align: center;\r\n\r\n  h1 {\r\n    margin: 0;\r\n  }\r\n\r\n  button {\r\n    background-color: #2378cc;\r\n    color: #fff;\r\n    padding: 1rem 2rem;\r\n    border-radius: 0.8rem;\r\n    border: 0;\r\n    font-size: 1.4rem;\r\n    font-weight: 500;\r\n\r\n    transition: filter 0.2s;\r\n\r\n    &:hover {\r\n      filter: brightness(0.9);\r\n    }\r\n  }\r\n`;\r\n","import { FiSearch } from \"react-icons/fi\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Container } from \"./styles\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <Container>\r\n      <FiSearch size={60} />\r\n      <h1>Oops - we've locked everywhere and could not find this.</h1>\r\n      <Link to=\"/activities\">\r\n        <button>Return to activities page</button>\r\n      </Link>\r\n    </Container>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Container, Header, Segment } from \"semantic-ui-react\";\r\n\r\nimport useStore from \"../../../app/stores/useStore\";\r\n\r\nexport default observer(function ServerError() {\r\n  const { commonStore } = useStore();\r\n  const { error } = commonStore;\r\n\r\n  return (\r\n    <Container>\r\n      <Header as=\"h1\" content=\"Server Error\" />\r\n      <Header sub as=\"h5\" color=\"red\" content={error?.message} />\r\n\r\n      {error?.details && (\r\n        <Segment>\r\n          <Header as=\"h4\" content=\"Stack trace\" color=\"teal\" />\r\n          <code style={{ marginTop: \"1rem\" }}>{error.details}</code>\r\n        </Segment>\r\n      )}\r\n    </Container>\r\n  );\r\n});\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 1rem;\r\n  }\r\n`;\r\n","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Label } from \"semantic-ui-react\";\r\n\r\nimport Button from \"../../../app/components/Button\";\r\nimport Input from \"../../../app/components/Input\";\r\nimport useStore from \"../../../app/stores/useStore\";\r\n\r\nimport { Container } from \"./styles\";\r\n\r\nexport default observer(function LoginForm() {\r\n  const { userStore } = useStore();\r\n  const { login } = userStore;\r\n\r\n  return (\r\n    <Container>\r\n      <Formik\r\n        initialValues={{\r\n          email: \"\",\r\n          password: \"\",\r\n          error: null,\r\n        }}\r\n        onSubmit={(values, { setErrors }) =>\r\n          login(values).catch((err) => setErrors({ error: err.response.data }))\r\n        }\r\n      >\r\n        {({ handleSubmit, isSubmitting, errors }) => (\r\n          <Form onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <h1>Sign In to Reactivities</h1>\r\n            <Input name=\"email\" placeholder=\"E-mail\" />\r\n            <Input name=\"password\" type=\"password\" placeholder=\"Password\" />\r\n            <ErrorMessage\r\n              name=\"error\"\r\n              render={() => (\r\n                <Label\r\n                  style={{ marginBottom: \"1rem\" }}\r\n                  color=\"red\"\r\n                  content={errors.error}\r\n                />\r\n              )}\r\n            />\r\n            <Button loading={isSubmitting} situation=\"positive\" type=\"submit\">\r\n              Login\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Container>\r\n  );\r\n});\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 1rem;\r\n  }\r\n`;\r\n","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport ValidationErrors from \"../../errors/ValidationErrors\";\r\nimport Button from \"../../../app/components/Button\";\r\nimport Input from \"../../../app/components/Input\";\r\nimport useStore from \"../../../app/stores/useStore\";\r\n\r\nimport { Container } from \"./styles\";\r\n\r\nconst formValidation = Yup.object({\r\n  displayName: Yup.string().required(\"Display name is required\"),\r\n  userName: Yup.string().required(\"Username is required\"),\r\n  email: Yup.string().email(\"Invalid email\").required(\"Email is required\"),\r\n  password: Yup.string().required(\"Password is required\"),\r\n});\r\n\r\nexport default observer(function RegisterForm() {\r\n  const { userStore } = useStore();\r\n  const { register } = userStore;\r\n\r\n  return (\r\n    <Container>\r\n      <Formik\r\n        initialValues={{\r\n          displayName: \"\",\r\n          userName: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n          error: null,\r\n        }}\r\n        onSubmit={(values, { setErrors }) =>\r\n          register(values).catch((error) => setErrors({ error }))\r\n        }\r\n        validationSchema={formValidation}\r\n      >\r\n        {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\r\n          <Form className=\"error\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <h1>Sign Up to Reactivities</h1>\r\n            <Input name=\"displayName\" placeholder=\"Display name\" />\r\n            <Input name=\"userName\" placeholder=\"Username\" />\r\n            <Input name=\"email\" type=\"email\" placeholder=\"E-mail\" />\r\n            <Input name=\"password\" type=\"password\" placeholder=\"Password\" />\r\n            <ErrorMessage\r\n              name=\"error\"\r\n              render={() => <ValidationErrors errors={errors.error} />}\r\n            />\r\n            <Button\r\n              loading={isSubmitting}\r\n              disabled={!isValid || !dirty || isSubmitting}\r\n              situation=\"positive\"\r\n              type=\"submit\"\r\n            >\r\n              Register\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Container>\r\n  );\r\n});\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  .content {\r\n    display: flex !important;\r\n    align-items: center;\r\n  }\r\n\r\n  .four.wide.column {\r\n    display: flex !important;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    .two {\r\n      width: 100%;\r\n      display: flex !important;\r\n      flex-direction: row;\r\n\r\n      div.value {\r\n        font-size: 6rem !important;\r\n      }\r\n\r\n      div.label {\r\n        font-size: 1.6rem !important;\r\n      }\r\n    }\r\n\r\n    .divider {\r\n      width: 100%;\r\n    }\r\n\r\n    .reveal {\r\n      width: 100%;\r\n    }\r\n  }\r\n`;\r\n","import { observer } from \"mobx-react-lite\";\r\nimport {\r\n  Divider,\r\n  Grid,\r\n  Header,\r\n  Item,\r\n  Segment,\r\n  Statistic,\r\n} from \"semantic-ui-react\";\r\n\r\nimport { Profile } from \"../../../app/models/profile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\nimport { Container } from \"./styles\";\r\n\r\ninterface ProfileHeaderProps {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileHeader({\r\n  profile,\r\n}: ProfileHeaderProps) {\r\n  return (\r\n    <Container>\r\n      <Segment>\r\n        <Grid>\r\n          <Grid.Column width={12}>\r\n            <Item.Group>\r\n              <Item>\r\n                <Item.Image\r\n                  avatar\r\n                  size=\"small\"\r\n                  src={profile.image || \"/assets/user.png\"}\r\n                />\r\n                <Item.Content>\r\n                  <Header as=\"h1\" content={profile.displayName} />\r\n                </Item.Content>\r\n              </Item>\r\n            </Item.Group>\r\n          </Grid.Column>\r\n          <Grid.Column width={4}>\r\n            <Statistic.Group widths={2}>\r\n              <Statistic label=\"Followers\" value={profile.followersCount} />\r\n              <Statistic label=\"Following\" value={profile.followingCount} />\r\n            </Statistic.Group>\r\n            <Divider />\r\n            <FollowButton {...{ profile }} />\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n    </Container>\r\n  );\r\n});\r\n","import { Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport Input from \"../../../app/components/Input\";\r\nimport Textarea from \"../../../app/components/Textarea\";\r\nimport useStore from \"../../../app/stores/useStore\";\r\n\r\ninterface Props {\r\n  handleToggleEditMode: () => void;\r\n}\r\n\r\nconst schema = Yup.object({\r\n  displayName: Yup.string().required(),\r\n});\r\n\r\nexport default observer(function ProfileEditForm({\r\n  handleToggleEditMode,\r\n}: Props) {\r\n  const {\r\n    profileStore: { profile, updateProfile },\r\n  } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{ displayName: profile?.displayName, bio: profile?.bio }}\r\n      onSubmit={(values) => {\r\n        updateProfile(values).then(() => {\r\n          handleToggleEditMode();\r\n        });\r\n      }}\r\n      validationSchema={schema}\r\n    >\r\n      {({ isSubmitting, isValid, dirty }) => (\r\n        <Form className=\"ui form\">\r\n          <Input placeholder=\"Display Name\" name=\"displayName\" />\r\n          <Textarea rows={3} placeholder=\"Add your bio\" name=\"bio\" />\r\n          <Button\r\n            positive\r\n            type=\"submit\"\r\n            loading={isSubmitting}\r\n            content=\"Update profile\"\r\n            floated=\"right\"\r\n            disabled={!isValid || !dirty}\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import { useCallback, useState } from \"react\";\r\nimport { Button, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nimport ProfileEditForm from \"../ProfileEditForm\";\r\nimport useStore from \"../../../app/stores/useStore\";\r\n\r\nexport default observer(function ProfileAbout() {\r\n  const { profileStore } = useStore();\r\n  const { isCurrentUser, profile } = profileStore;\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  const handleToggleEditMode = useCallback(() => {\r\n    setEditMode((value) => !value);\r\n  }, []);\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width=\"16\">\r\n          <Header\r\n            floated=\"left\"\r\n            icon=\"user\"\r\n            content={`About ${profile?.displayName}`}\r\n          />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={editMode ? \"Cancel\" : \"Edit Profile\"}\r\n              onClick={() => setEditMode(!editMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width=\"16\">\r\n          {editMode ? (\r\n            <ProfileEditForm {...{ handleToggleEditMode }} />\r\n          ) : (\r\n            <span style={{ whiteSpace: \"pre-wrap\" }}>{profile?.bio}</span>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { SyntheticEvent, useEffect } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Tab, Grid, Header, Card, Image, TabProps } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { format } from \"date-fns\";\r\n\r\nimport useStore from \"../../../app/stores/useStore\";\r\nimport { UserActivity } from \"../../../app/models/profile\";\r\n\r\nconst panes = [\r\n  { menuItem: \"Future Events\", pane: { key: \"future\" } },\r\n  { menuItem: \"Past Events\", pane: { key: \"past\" } },\r\n  { menuItem: \"Hosting\", pane: { key: \"hosting\" } },\r\n];\r\n\r\nexport default observer(function ProfileActivities() {\r\n  const { profileStore } = useStore();\r\n  const { loadUserActivities, profile, loadingActivities, userActivities } =\r\n    profileStore;\r\n\r\n  useEffect(() => {\r\n    loadUserActivities(profile!.userName);\r\n  }, [loadUserActivities, profile]);\r\n\r\n  const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\r\n    loadUserActivities(\r\n      profile!.userName,\r\n      panes[data.activeIndex as number].pane.key\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingActivities}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"calendar\" content={\"Activities\"} />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Tab\r\n            panes={panes}\r\n            menu={{ secondary: true, pointing: true }}\r\n            onTabChange={(e, data) => handleTabChange(e, data)}\r\n          />\r\n          <br />\r\n          <Card.Group itemsPerRow={4}>\r\n            {userActivities.map((activity: UserActivity) => (\r\n              <Card\r\n                as={Link}\r\n                to={`/activities/${activity.id}`}\r\n                key={activity.id}\r\n              >\r\n                <Image\r\n                  src={`/assets/categoryImages/${activity.category}.jpg`}\r\n                  style={{ minHeight: 100, objectFit: \"cover\" }}\r\n                />\r\n                <Card.Content>\r\n                  <Card.Header textAlign=\"center\">{activity.title}</Card.Header>\r\n                  <Card.Meta textAlign=\"center\">\r\n                    <div>{format(new Date(activity.date), \"do LLL\")}</div>\r\n                    <div>{format(new Date(activity.date), \"h:mm a\")}</div>\r\n                  </Card.Meta>\r\n                </Card.Content>\r\n              </Card>\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Card, Grid, Header, Tab } from \"semantic-ui-react\";\r\n\r\nimport ProfileCard from \"../ProfileCard\";\r\n\r\nimport useStore from \"../../../app/stores/useStore\";\r\n\r\nexport default observer(function ProfileFollowings() {\r\n  const { profileStore } = useStore();\r\n  const { profile, followings, loadingFollowings, activeTab } = profileStore;\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingFollowings}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header\r\n            floated=\"left\"\r\n            icon=\"user\"\r\n            content={\r\n              activeTab === 3\r\n                ? `People following ${profile?.displayName}`\r\n                : `People ${profile?.displayName} is following`\r\n            }\r\n          />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Card.Group itemsPerRow={4}>\r\n            {followings.map((profile) => (\r\n              <ProfileCard key={profile.userName} {...{ profile }} />\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { Cropper } from \"react-cropper\";\r\nimport \"cropperjs/dist/cropper.css\";\r\n\r\ninterface PhotoWidgetCropperProps {\r\n  imagePreview: string;\r\n  handleSetCropper: (cropper: Cropper) => void;\r\n}\r\n\r\nexport default function PhotoWidgetCropper({\r\n  imagePreview,\r\n  handleSetCropper,\r\n}: PhotoWidgetCropperProps) {\r\n  return (\r\n    <Cropper\r\n      src={imagePreview}\r\n      style={{\r\n        height: 200,\r\n        width: \"100%\",\r\n      }}\r\n      initialAspectRatio={1}\r\n      aspectRatio={1}\r\n      preview=\".img-preview\"\r\n      guides={false}\r\n      viewMode={1}\r\n      autoCropArea={1}\r\n      background={false}\r\n      onInitialized={handleSetCropper}\r\n    />\r\n  );\r\n}\r\n","import { useCallback, CSSProperties } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { Header, Icon } from \"semantic-ui-react\";\r\n\r\ninterface PhotoWidgetDropzoneProps {\r\n  handleSetFiles: (files: any) => void;\r\n}\r\n\r\nexport default function PhotoWidgetDropzone({\r\n  handleSetFiles,\r\n}: PhotoWidgetDropzoneProps) {\r\n  const dzStyles: CSSProperties = {\r\n    border: \"dashed 3px #eee\",\r\n    borderColor: \"#eee\",\r\n    borderRadius: \"0.5rem\",\r\n    paddingTop: \"3rem\",\r\n    textAlign: \"center\",\r\n    height: 200,\r\n  };\r\n\r\n  const dzActive: CSSProperties = {\r\n    borderColor: \"green\",\r\n  };\r\n\r\n  const onDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      handleSetFiles(\r\n        acceptedFiles.map((file: any) =>\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file),\r\n          })\r\n        )\r\n      );\r\n    },\r\n    [handleSetFiles]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <div\r\n      {...getRootProps()}\r\n      style={\r\n        isDragActive\r\n          ? {\r\n              ...dzStyles,\r\n              ...dzActive,\r\n            }\r\n          : dzStyles\r\n      }\r\n    >\r\n      <input {...getInputProps()} />\r\n      <Icon name=\"upload\" size=\"huge\" />\r\n      <Header content=\"Drop image here\" />\r\n    </div>\r\n  );\r\n}\r\n","import { useCallback, useEffect, useState } from \"react\";\r\nimport { Button, Grid, Header } from \"semantic-ui-react\";\r\n\r\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\r\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\r\n\r\ninterface PhotoUploadWidgetProps {\r\n  uploading: boolean;\r\n  handlePhotoUpload: (file: Blob) => void;\r\n}\r\n\r\nexport default function PhotoUploadWidget({\r\n  uploading,\r\n  handlePhotoUpload,\r\n}: PhotoUploadWidgetProps) {\r\n  const [files, setFiles] = useState<any>([]);\r\n  const [cropper, setCropper] = useState<Cropper>();\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      files.forEach((file: any) => URL.revokeObjectURL(file.preview));\r\n    };\r\n  }, [files]);\r\n\r\n  const handleSetFiles = useCallback((files: any) => {\r\n    setFiles(files);\r\n  }, []);\r\n\r\n  const handleSetCropper = useCallback((cropper: any) => {\r\n    setCropper(cropper);\r\n  }, []);\r\n\r\n  const onCrop = useCallback(() => {\r\n    if (cropper) {\r\n      cropper.getCroppedCanvas().toBlob((blob) => {\r\n        handlePhotoUpload(blob!);\r\n      });\r\n    }\r\n  }, [cropper, handlePhotoUpload]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 1 - Add Photo\" />\r\n        <PhotoWidgetDropzone {...{ handleSetFiles }} />\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 2 - Resize Image\" />\r\n        {files && files.length > 0 && (\r\n          <PhotoWidgetCropper\r\n            {...{ handleSetCropper, imagePreview: files[0].preview }}\r\n          />\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 3 - Preview & Upload\" />\r\n\r\n        {files && files.length > 0 && (\r\n          <>\r\n            <div\r\n              className=\"img-preview\"\r\n              style={{ minHeight: 200, overflow: \"hidden\" }}\r\n            />\r\n            <Button.Group className=\"imgPreview\">\r\n              <Button\r\n                loading={uploading}\r\n                onClick={onCrop}\r\n                positive\r\n                icon=\"check\"\r\n              />\r\n              <Button\r\n                disabled={uploading}\r\n                onClick={() => setFiles([])}\r\n                icon=\"close\"\r\n              />\r\n            </Button.Group>\r\n          </>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n}\r\n","import { SyntheticEvent, useState } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Button, Card, Grid, Header, Image, Tab } from \"semantic-ui-react\";\r\n\r\nimport useStore from \"../../../app/stores/useStore\";\r\nimport { Photo, Profile } from \"../../../app/models/profile\";\r\nimport PhotoUploadWidget from \"../../../app/components/PhotoUploadWidget\";\r\n\r\ninterface ProfilePhotosProps {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfilePhotos({\r\n  profile,\r\n}: ProfilePhotosProps) {\r\n  const { profileStore } = useStore();\r\n  const {\r\n    isCurrentUser,\r\n    uploadPhoto,\r\n    uploading,\r\n    loading,\r\n    setMainPhoto,\r\n    deletePhoto,\r\n  } = profileStore;\r\n\r\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\r\n  const [target, setTarget] = useState(\"\");\r\n\r\n  function handleToggleAddPhotoMode() {\r\n    setAddPhotoMode((value) => !value);\r\n  }\r\n\r\n  function handlePhotoUpload(file: Blob) {\r\n    uploadPhoto(file).then(() => handleToggleAddPhotoMode());\r\n  }\r\n\r\n  function handleSetMainPhoto(\r\n    photo: Photo,\r\n    event: SyntheticEvent<HTMLButtonElement>\r\n  ) {\r\n    setTarget(event.currentTarget.name);\r\n    setMainPhoto(photo);\r\n  }\r\n\r\n  function handleDeletePhoto(\r\n    photo: Photo,\r\n    event: SyntheticEvent<HTMLButtonElement>\r\n  ) {\r\n    setTarget(event.currentTarget.name);\r\n    deletePhoto(photo);\r\n  }\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={addPhotoMode ? \"Cancel\" : \"Add Photo\"}\r\n              onClick={handleToggleAddPhotoMode}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          {addPhotoMode ? (\r\n            <PhotoUploadWidget {...{ uploading, handlePhotoUpload }} />\r\n          ) : (\r\n            <Card.Group itemsPerRow={5}>\r\n              {profile.photos?.map((photo) => (\r\n                <Card key={photo.id}>\r\n                  <Image src={photo.url || \"/assets/user.png\"} />\r\n                  {isCurrentUser && (\r\n                    <Button.Group fluid widths={2}>\r\n                      <Button\r\n                        basic\r\n                        color=\"green\"\r\n                        content=\"Main\"\r\n                        name={`main-${photo.id}`}\r\n                        loading={target === `main-${photo.id}` && loading}\r\n                        onClick={(e) => handleSetMainPhoto(photo, e)}\r\n                        disabled={photo.isMain}\r\n                      />\r\n                      <Button\r\n                        basic\r\n                        color=\"red\"\r\n                        icon=\"trash\"\r\n                        name={`delete-${photo.id}`}\r\n                        loading={target === `delete-${photo.id}` && loading}\r\n                        onClick={(e) => handleDeletePhoto(photo, e)}\r\n                        disabled={photo.isMain}\r\n                      />\r\n                    </Button.Group>\r\n                  )}\r\n                </Card>\r\n              ))}\r\n            </Card.Group>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div``;\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Tab } from \"semantic-ui-react\";\r\n\r\nimport { Profile } from \"../../../app/models/profile\";\r\nimport useStore from \"../../../app/stores/useStore\";\r\nimport ProfileAbout from \"../ProfileAbout\";\r\nimport ProfileActivities from \"../ProfileActivities\";\r\nimport ProfileFollowings from \"../ProfileFollowings\";\r\nimport ProfilePhotos from \"../ProfilePhotos\";\r\n\r\nimport { Container } from \"./styles\";\r\n\r\ninterface ProfileContentProps {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileContent({\r\n  profile,\r\n}: ProfileContentProps) {\r\n  const { profileStore } = useStore();\r\n  const { setActiveTab } = profileStore;\r\n\r\n  const panes = [\r\n    { menuItem: \"About\", render: () => <ProfileAbout /> },\r\n    { menuItem: \"Photos\", render: () => <ProfilePhotos {...{ profile }} /> },\r\n    { menuItem: \"Events\", render: () => <ProfileActivities /> },\r\n    {\r\n      menuItem: \"Following\",\r\n      render: () => <ProfileFollowings {...{ profile }} />,\r\n    },\r\n    {\r\n      menuItem: \"Followers\",\r\n      render: () => <ProfileFollowings {...{ profile }} />,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Container>\r\n      <Tab\r\n        menu={{ fluid: true, vertical: true }}\r\n        menuPosition=\"right\"\r\n        panes={panes}\r\n        onTabChange={(e, data) => setActiveTab(data.activeIndex)}\r\n      />\r\n    </Container>\r\n  );\r\n});\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 2rem;\r\n`;\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport useStore from \"../../app/stores/useStore\";\r\nimport Loading from \"../../app/components/Loading\";\r\nimport ProfileHeader from \"./ProfileHeader\";\r\nimport ProfileContent from \"./ProfileContent\";\r\n\r\nimport { Container } from \"./styles\";\r\nimport { useEffect } from \"react\";\r\n\r\ninterface ProfileParams {\r\n  userName: string;\r\n}\r\n\r\nexport default observer(function Profile() {\r\n  const { userName } = useParams<ProfileParams>();\r\n  const { profileStore } = useStore();\r\n  const { loadingProfile, loadProfile, profile, setActiveTab } = profileStore;\r\n\r\n  useEffect(() => {\r\n    loadProfile(userName);\r\n\r\n    return () => {\r\n      setActiveTab(0);\r\n    };\r\n  }, [loadProfile, userName, setActiveTab]);\r\n\r\n  if (loadingProfile) return <Loading content=\"Loading profile...\" />;\r\n\r\n  return (\r\n    <Container>\r\n      {profile && (\r\n        <>\r\n          <ProfileHeader {...{ profile }} />\r\n          <ProfileContent {...{ profile }} />\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n});\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  background-image: linear-gradient(\r\n    135deg,\r\n    rgb(24, 42, 115) 0%,\r\n    rgb(33, 138, 174) 69%,\r\n    rgb(32, 167, 172) 89%\r\n  );\r\n\r\n  nav {\r\n    height: 52px;\r\n    max-width: 1120px;\r\n    margin: 0 auto;\r\n    padding: 2rem;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n\r\n    div.activities {\r\n      display: flex;\r\n      flex-direction: row;\r\n      align-items: center;\r\n\r\n      color: #fff;\r\n\r\n      img {\r\n        margin-right: 1rem;\r\n        width: 35px;\r\n        height: 35px;\r\n      }\r\n    }\r\n\r\n    div.menu {\r\n      margin-left: 4rem;\r\n      display: flex;\r\n      flex-direction: row;\r\n      align-items: center;\r\n      gap: 2rem;\r\n\r\n      div.cover {\r\n        a {\r\n          color: #fff;\r\n          font-size: 1.4rem;\r\n\r\n          transition: filter 0.2s;\r\n\r\n          &.active {\r\n            color: lightgrey;\r\n          }\r\n\r\n          &:hover {\r\n            filter: brightness(0.9);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    div.user {\r\n      margin-left: auto;\r\n\r\n      .ui.dropdown > .divider,\r\n      .ui.dropdown > .dropdown.icon:before {\r\n        color: #fff;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { Dropdown, Image } from \"semantic-ui-react\";\r\n\r\nimport Button from \"../components/Button\";\r\nimport useStore from \"../stores/useStore\";\r\n\r\nimport { Container } from \"../styles/NavBar\";\r\n\r\nexport default observer(function Navbar() {\r\n  const location = useLocation();\r\n  const { userStore } = useStore();\r\n  const { user, isLoggedIn, logout } = userStore;\r\n\r\n  return (\r\n    <Container>\r\n      <nav>\r\n        <Link to=\"/\">\r\n          <div className=\"activities\">\r\n            <img src=\"/assets/logo.png\" alt=\"logo\" />\r\n            Reactivities\r\n          </div>\r\n        </Link>\r\n        {isLoggedIn && (\r\n          <>\r\n            <div className=\"menu\">\r\n              <div className=\"cover\">\r\n                <Link\r\n                  to=\"/activities\"\r\n                  className={\r\n                    location.pathname === \"/activities\" ? \"active\" : \"\"\r\n                  }\r\n                >\r\n                  Activities\r\n                </Link>\r\n              </div>\r\n              <div className=\"cover\">\r\n                <Link\r\n                  to=\"/errors\"\r\n                  className={location.pathname === \"/errors\" ? \"active\" : \"\"}\r\n                >\r\n                  Errors\r\n                </Link>\r\n              </div>\r\n              <div className=\"cover\">\r\n                <Link to=\"/createActivity\">\r\n                  <Button situation=\"positive\">Create Activity</Button>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n\r\n            {user && (\r\n              <div className=\"user\">\r\n                <Image\r\n                  src={user?.image || \"/assets/user.png\"}\r\n                  alt={user?.userName}\r\n                  avatar\r\n                  spaced=\"right\"\r\n                  className=\"user-image\"\r\n                />\r\n                <Dropdown pointing=\"top left\" text={user?.displayName}>\r\n                  <Dropdown.Menu>\r\n                    <Dropdown.Item\r\n                      as={Link}\r\n                      to={`/profiles/${user?.userName}`}\r\n                      text=\"My profile\"\r\n                      icon=\"user\"\r\n                    />\r\n                    <Dropdown.Item\r\n                      onClick={logout}\r\n                      text=\"Logout\"\r\n                      icon=\"power\"\r\n                    />\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </nav>\r\n    </Container>\r\n  );\r\n});\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Background = styled.div`\r\n  flex: 1;\r\n  background-color: #eaeaea;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  max-width: 1120px;\r\n  margin: 0 auto;\r\n  margin-top: 5rem;\r\n`;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\n\r\nimport agent from \"../../../app/api/agent\";\r\nimport useStore from \"../../../app/stores/useStore\";\r\nimport useQuery from \"../../../app/util/hooks\";\r\n\r\nexport default function ConfirmEmail() {\r\n  const email = useQuery().get(\"email\") as string;\r\n  const token = useQuery().get(\"token\") as string;\r\n\r\n  const Status = {\r\n    Verifying: \"Verifying\",\r\n    Failed: \"Failed\",\r\n    Success: \"Success\",\r\n  };\r\n\r\n  const { userStore } = useStore();\r\n  const { resendEmailConfirmationLink } = userStore;\r\n\r\n  const [status, setStatus] = useState(Status.Verifying);\r\n\r\n  useEffect(() => {\r\n    agent.Account.verifyEmail(token, email)\r\n      .then(() => {\r\n        setStatus(Status.Success);\r\n      })\r\n      .catch(() => {\r\n        setStatus(Status.Failed);\r\n      });\r\n  }, [Status.Failed, Status.Success, token, email]);\r\n\r\n  function getBody() {\r\n    switch (status) {\r\n      case Status.Verifying:\r\n        return <p>Verifying...</p>;\r\n      case Status.Failed:\r\n        return (\r\n          <div>\r\n            <p>\r\n              Verification failed. You can try resending the verify link to your\r\n              email\r\n            </p>\r\n            <Button\r\n              primary\r\n              onClick={() => resendEmailConfirmationLink(email)}\r\n              size=\"huge\"\r\n              content=\"Resend email\"\r\n            />\r\n          </div>\r\n        );\r\n      case Status.Success:\r\n        return (\r\n          <div>\r\n            <p>Email has been verified - you can now login</p>\r\n            <Button\r\n              as={Link}\r\n              to=\"/login\"\r\n              primary\r\n              content=\"Redirect to login page\"\r\n              size=\"huge\"\r\n            />\r\n          </div>\r\n        );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Segment placeholder textAlign=\"center\">\r\n      <Header icon>\r\n        <Icon name=\"envelope\" />\r\n        Email verification\r\n      </Header>\r\n      <Segment.Inline>{getBody()}</Segment.Inline>\r\n    </Segment>\r\n  );\r\n}\r\n","import { Route, Switch, useLocation } from \"react-router-dom\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n\r\nimport useStore from \"../stores/useStore\";\r\n\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport RegisterSuccess from \"../../features/users/RegisterSuccess\";\r\nimport Loading from \"../components/Loading\";\r\nimport ActivityDashboard from \"../../features/activities\";\r\nimport ActivityForm from \"../../features/activities/ActivityForm\";\r\nimport ActivityDetails from \"../../features/activities/ActivityDetails\";\r\nimport Home from \"../../features/Home\";\r\nimport TestErrors from \"../../features/errors/TestError\";\r\nimport NotFound from \"../../features/errors/NotFound\";\r\nimport ServerError from \"../../features/errors/ServerError\";\r\nimport LoginForm from \"../../features/users/LoginForm\";\r\nimport RegisterForm from \"../../features/users/RegisterForm\";\r\nimport Profile from \"../../features/profiles\";\r\nimport Navbar from \"./NavBar\";\r\n\r\nimport { Container, Background, Content } from \"../styles/App\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useEffect } from \"react\";\r\nimport ConfirmEmail from \"../../features/users/ConfirmEmail\";\r\n\r\nexport default observer(function App() {\r\n  const location = useLocation();\r\n  const { commonStore, userStore } = useStore();\r\n  const { token, setAppLoaded, appLoaded } = commonStore;\r\n  const { getUser, getFacebookLoginStatus } = userStore;\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      getUser().finally(() => setAppLoaded());\r\n    } else {\r\n      getFacebookLoginStatus().then(() => setAppLoaded());\r\n    }\r\n  }, [setAppLoaded, getUser, token, getFacebookLoginStatus]);\r\n\r\n  if (!appLoaded) return <Loading content=\"Loading app...\" />;\r\n\r\n  return (\r\n    <Container>\r\n      <Route path=\"/\" component={Home} exact />\r\n\r\n      <Route\r\n        path=\"/(.+)\"\r\n        render={() => (\r\n          <>\r\n            <Navbar />\r\n\r\n            <Background>\r\n              <Content>\r\n                <Switch>\r\n                  <Route path=\"/\" component={Home} exact />\r\n                  <PrivateRoute\r\n                    path=\"/activities\"\r\n                    component={ActivityDashboard}\r\n                    exact\r\n                  />\r\n                  <PrivateRoute\r\n                    path=\"/activities/:id\"\r\n                    component={ActivityDetails}\r\n                  />\r\n                  <PrivateRoute\r\n                    key={location.key}\r\n                    path={[\"/createActivity\", \"/manage/:id\"]}\r\n                    component={ActivityForm}\r\n                  />\r\n                  <PrivateRoute\r\n                    path=\"/profiles/:userName\"\r\n                    component={Profile}\r\n                  />\r\n                  <PrivateRoute path=\"/errors\" component={TestErrors} />\r\n                  <Route path=\"/server-error\" component={ServerError} />\r\n                  <Route path=\"/login\" component={LoginForm} />\r\n                  <Route path=\"/register\" component={RegisterForm} />\r\n                  <Route\r\n                    path=\"/account/registerSuccess\"\r\n                    component={RegisterSuccess}\r\n                  />\r\n                  <Route path=\"/account/verifyEmail\" component={ConfirmEmail} />\r\n                  <Route component={NotFound} />\r\n                </Switch>\r\n              </Content>\r\n            </Background>\r\n          </>\r\n        )}\r\n      />\r\n\r\n      <ToastContainer position=\"bottom-center\" hideProgressBar />\r\n    </Container>\r\n  );\r\n});\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport default createGlobalStyle`\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nhtml {\r\n  font-size: 62.5%;\r\n}\r\n\r\n#root {\r\n  height: 100vh;\r\n}\r\n\r\nh1, h2, h3, h4, h5, h6 {\r\n  margin-bottom: 0;\r\n}\r\n\r\na {\r\n  text-decoration: none;\r\n  color: #000;\r\n}\r\n\r\nbody,\r\ninput,\r\nbutton,\r\ntextarea {\r\n  font: 400 1.6rem \"Roboto\", sans-serif;\r\n}\r\n\r\nbutton {\r\n  font-weight: 400;\r\n  cursor: pointer;\r\n}\r\n\r\n.react-calendar {\r\n  width: 100%;\r\n  border: none;\r\n  box-shadow: rgb(99 99 99 / 20%) 0px 2px 8px 0px;\r\n  border-radius: 0.8rem;\r\n}\r\n\r\n.react-datepicker-wrapper, input {\r\n  width: 100%;\r\n}\r\n\r\n.react-datepicker {\r\n  font-size: 1rem;\r\n}\r\n\r\n.ui.dropdown .menu>.item {\r\n  font-size: 1.6rem;\r\n}\r\n\r\n.ui.dropdown .menu .active.item {\r\n  font-weight: 500;\r\n}\r\n\r\n.ui.label, .ui.labels .label {\r\n  font-size: 1.4rem;\r\n  font-weight: 500;\r\n}\r\n\r\n.ui.segment, .ui.segments .segment, .ui.menu, .ui.form textarea{\r\n  font-size: 1.6rem;\r\n}\r\n\r\n.ui.buttons.imgPreview {\r\n  margin-top: 1rem;\r\n  width: 100%;\r\n}\r\n`;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Router } from \"react-router-dom\";\r\nimport { createBrowserHistory } from \"history\";\r\n\r\nimport { StoreProvider } from \"./app/stores\";\r\nimport ScrollToTop from './app/layout/ScrollToTop';\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport App from \"./app/layout/App\";\r\n\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport GlobalStyles from \"./app/styles/global\";\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <StoreProvider>\r\n    <Router {...{ history }}>\r\n      <ScrollToTop />\r\n      <App />\r\n      <GlobalStyles />\r\n    </Router>\r\n  </StoreProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}